{"version":3,"sources":["components/setup/Role.js","components/setup/Setup.js","components/user-pages/Signup.js","components/setup/AddTeacher.js","components/class/ClassBox.js","components/setup/NewClass.js","components/setup/NewSchool.js","components/school/SchoolList.js","components/class/ClassList.js","components/landing/AdminLanding.js","components/posts/Posting.js","components/landing/TeacherLanding.js","components/landing/Landing.js","components/user-pages/Login.js","components/Home.js","components/user-pages/Account.js","components/setup/AddClass.js","components/setup/FindClass.js","components/school/SchoolBox.js","components/class/ClassDetails.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Setup","props","state","currentUser","userId","_id","fullName","email","role","classes","image","message","console","log","this","axios","put","process","withCredentials","then","responseFromServer","catch","err","setState","handleRole","to","pathname","onClick","assignParent","Signup","password","event","target","name","value","preventDefault","post","userDoc","data","onUserChange","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","AddTeacher","search","e","searchTerm","allUsers","filteredUsers","filter","eachUser","toUpperCase","includes","visibleUsers","showFoundUsers","map","i","addTeacher","classId","teacher","teacherName","teacherId","classCode","creator","parents","classAdded","get","responseFromTheBackend","usersFound","teacherItem","responseForUpdateClass","responseForGetClass","classFound","teacherDoc","onTeacherChange","className","ClassBox","toggleEditForm","showEditForm","teacherAdded","schoolName","schoolId","showEditButton","teacherData","updatedClass","syncCurrentTeacher","updateClass","NewClass","location","newClassId","newClass","NewSchool","address","city","zip","schoolAdded","theUpdatedUser","school","showAddedSchool","SchoolList","showFoundSchools","allSchools","eachSchool","index","key","visibleSchools","schoolCount","needsSchool","schoolsFound","length","ClassList","showFoundClasses","allClasses","eachClass","showTeacherSchools","schools","push","visibleClasses","AdminLanding","Posting","postId","creation","description","files","class","likes","comments","allPostings","visiblePostings","postingsFound","posts","formData","FormData","numFiles","append","newPost","images","src","alt","postLiked","eachPost","renderPostImages","addLike","showLikes","submitPostForm","id","encType","for","selectChange","showClassesForPost","multiple","handleFiles","showPostings","TeacherLanding","Landing","classesFound","Login","loggedIn","response","Home","Account","userDataFromServer","window","confirm","theDeletedUser","updateName","updateEmail","updatePassword","deleteAccount","AddClass","searchClasses","theSchool","classCodeEntered","formClassCode","FindClass","findClass","SchoolBox","updatedSchool","schoolFound","deletedSchoolId","deletedSchool","responseAfterClasses","foundClasses","deletedClasses","foundPosts","deletedPosts","deleteSchool","updateSchool","ClassDetails","App","syncCurrentUser","user","delete","alert","handleLogout","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8116e2d.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class Role extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password:\"\",\n      role: \"Unassigned\",\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value })\n    }\n\n    syncCurrentUSer(user){\n      this.setState({ currentUser: user })\n    }\n\n    handleSubmit (event){\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    } //end of handleSubmit\n\n\n    render(){\n\n\n      return (\n\n        <div>\n\n           <h2>ROLE COMPONENT </h2>\n                \n\n\n\n\n\n\n\n        </div>\n      )\n\n\n\n\n    }  \n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport Role from \"../setup/Role\";\n\n\nexport default class Setup extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser._id,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n      },\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Setup component - Initial state upon mount\", this.state)\n    }\n\n    shouldComponentUpdate() {\n      \n\n    }\n\n\n    handleRole(){\n    \n      console.log(\"submitting handle role\");\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/role`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state.role,\n          // secure sending\n          { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            console.log(\"response is:\", responseFromServer);\n        })\n        .catch( err => console.log(\"Err in role setup: \", err)); \n\n    } //end of handleRole\n\n\n    assignAdmin() {\n      this.setState(({currentUser}) => ({currentUser: {\n        ...currentUser,\n        role: \"Admin\",\n      }}))\n    \n    console.log(\"State after assign Admin\", this.state.currentUser)\n    }\n\n    assignTeacher(){\n      this.setState({ role: \"Teacher\" })\n      console.log(\"This.state Role assigned as Teacher:\", this.state.role)\n      this.handleRole()\n    }\n\n    assignParent() {\n      this.setState({ role: \"Parent\" })\n      console.log(\"This.state Role assigned as Parent:\", this.state.role)\n      this.handleRole()\n    }\n\n\n\n\n    render(){\n\n      console.log(\"Do I have user props in Setup? This.props.currentUser: \", this.props.currentUser)\n\n      return (\n\n        <div>\n          <h1>SETUP COMPONENT</h1>\n\n           <h2> Welcome, {this.props.currentUser.fullName}! Please select your role: </h2>\n          \n\n          <div>\n           {/* <Link to= \"/setup/admin\" onClick={() => this.assignAdmin()}> Administrator </Link>\n          </div> */}\n\n          <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Administrator </Link>\n          </div>\n          \n          <div>\n          <Link to={{\n            pathname: '/setup/teacher',\n            state: {\n              currentUser: {\n                userId: this.state.currentUser.userId,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Teacher\"\n              }\n            }}\n            }> Teacher </Link>\n          </div>\n\n          <div>\n          <Link to= \"/setup/parent\" onClick={this.assignParent}> Parent </Link>\n          </div>     \n           \n\n\n\n        </div>\n      )\n\n\n\n    }  \n\n} // end of Setup component\n\n","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\n\nexport default class Signup extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"Unassigned\",\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/signup`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            console.log(\"userDoc from delete user account:\", userDoc);\n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n    render(){\n        console.log(\"User props in Signup? This.props.currentUser: \", this.props.currentUser)\n        // console.log(\"The current user's role:\", this.props.currentUser[0])\n        // const userProps = {fullName: this.props.currentUser.fullName, email: this.props.currentUser.email, role: this.props.currentUser.role};\n        const { fullName, email, password, role } = this.state;\n        \n        \n        if(this.props.currentUser){\n            return(\n            \n            <div>\n\n            <Setup \n              currentUser = { this.props.currentUser } \n            />         \n            </div>\n            )\n        }\n\n        return (\n            <section>\n                <h2> Sign up </h2>\n                <form onSubmit = {event => this.handleSubmit(event) } >\n                                        \n                    <label> Full name: </label>\n                    <input\n                        value={fullName} // this.state.fullName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"fullName\"\n                        placeholder=\"Jane Doe\"\n                    />\n\n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                    <button> Sign Up </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            \n            </section>\n\n\n\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class AddTeacher extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      teacher: {teacherName: null,\n        teacherId: null},\n      allUsers: null,\n      visibleUsers: null,\n      searchTerm: \"\",\n      // schoolName: this.props.location.state.schoolName,\n      // schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: \"\",\n      message: null,\n      classAdded: false\n      }\n    }\n\n\n    componentDidMount (){\n\n      console.log(\"Props on addTeacher mount: \", this.props )\n      console.log(\"state of addTeacher component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getusers`, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Users found: \", responseFromTheBackend.data.usersFound)\n        this.setState({ allUsers: responseFromTheBackend.data.usersFound });\n\n        })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n    }\n\n  \n    search = (e) =>{\n      \n      this.setState({searchTerm: e.target.value }, ()=>{\n  \n        let clone = [...this.state.allUsers];\n        \n        let filteredUsers = this.state.allUsers.filter((eachUser)=>{\n          console.log(\"eachUser is:\", eachUser)\n        return eachUser.fullName.toUpperCase().includes(this.state.searchTerm.toUpperCase())\n  \n      })\n          this.setState({visibleUsers: filteredUsers})\n      })\n    }\n\n    addTeacher(teacherItem){\n      \n      console.log(\"item passed to addTeacher function: \", teacherItem)\n      \n      this.setState({ teacher: {\n            teacherName: teacherItem.fullName, \n            teacherId: teacherItem._id\n          }\n        }, () => {\n            console.log(\"State after post, teacher and id added:\", this.state);\n          \n\n            axios.put(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, this.state.teacher, { withCredentials: true })\n            .then( responseForUpdateClass => {\n              console.log(\"Class updated in ClassBox: \", responseForUpdateClass.data)\n            \n\n              axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n              .then( responseForGetClass => {\n              console.log(\"Updated Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ teacher: {\n              teacherName: responseForGetClass.data.classFound.teacher.teacherName, \n              teacherId: responseForGetClass.data.classFound.teacher.teacherId\n              }}, () => {\n              console.log(\"State after getting updated class:\", this.state);\n\n\n              const teacherDoc = responseForGetClass.data.classFound.teacher;\n              console.log(\"teacherDoc from addTeacher component:\", teacherDoc);\n              this.props.onTeacherChange(teacherDoc);\n\n              })\n\n            })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n\n\n\n            })\n            .catch(err => console.log(\"Err while updating class: \", err))\n          \n        \n          }) \n\n    }\n      \n    \n\n    showFoundUsers = () =>{\n\n      return this.state.visibleUsers.map((eachUser, i)=>{\n  \n        return( \n        \n        <div>  \n        <label>User: </label> {eachUser.fullName}\n\n        <button onClick={() => this.addTeacher(eachUser)}> Assign Teacher </button>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n   \n\n\n    render(){\n\n      return (\n        <div>\n\n        <h4 className=\"title\"> Assign Teacher</h4>\n        <label>Search for Teacher:</label><input onChange={this.search}\n         value={this.state.searchTerm}>\n        </input>\n\n         {this.state.visibleUsers && <div>\n\n          <h4>Found users:</h4> \n          {this.showFoundUsers()}\n         </div>}\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\n\nexport default class ClassBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      // currentUser: \"\",\n      // classId: \"\",\n      // className: \"\",\n      // teacher: \"\",      \n      //   teacherId: \"\",\n      // teacherAdded: \"\",\n      // schoolName: \"\",\n      // schoolId: \"\",\n      // classCode: \"\",\n      // creator: \"\",\n      // parents: \"\",\n      // showEditButton: \"\",\n      // showEditForm: \"\",\n\n      currentUser: this.props.currentUser,\n      classId: this.props.classId,\n      className: this.props.className,\n      teacher: {\n        teacherName: this.props.teacherName,\n        teacherId: this.props.teacherId},\n      teacherAdded: false,\n      schoolName: this.props.schoolName,\n      schoolId: this.props.schoolId,\n      classCode: this.props.classCode,\n      creator: this.props.creator,\n      parents: this.props.parents,\n      showEditButton: false,\n      showEditForm: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassBox mount: \", this.props )\n      console.log(\"State of ClassBox component on mount: \", this.state)\n\n      if (this.state.currentUser.role !== \"Parent\") {\n        this.setState({showEditButton:true}, () => {console.log(\"State after edit form condition:\", this.state)}\n          )\n        }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n  \n    syncCurrentTeacher(teacherData){\n      console.log(\"Teacher data passed to synccurrentteacher\", teacherData)\n      this.setState({ teacher: {teacherName: teacherData.teacherName, teacherId: teacherData.teacherId}  })\n    }\n  \n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n\n\n    updateClass(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/class/update/`+this.state.classId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n          .then( updatedClass => {\n            console.log(\"Class found after edit: \", updatedClass.data.classFound)\n            \n\n            this.setState({ className: updatedClass.data.classFound.className }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n    \n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in class update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h3>Class Name: </h3> \n            <h4>{this.state.className}</h4>\n          </div>\n                \n          <div>\n            <label>Class Code: </label> \n              {this.state.classCode}\n          </div>\n                \n        <div>\n                  \n          <label>Class Teacher: </label> \n\n          {/* If no teacher is assigned, and user is Admin or Teacher, allow view of assign teacher */}\n          {!this.state.teacher.teacherName && <div> {!this.state.teacher.teacherName} \n           No Teacher Assigned \n                  \n           {this.state.showEditButton && <div>\n            <AddTeacher\n            onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n           \n            </div>}\n\n          {/* If teacher is assigned, show their name.  */}\n            {this.state.teacher.teacherName}\n        \n         </div>\n\n         <div>\n            <label>Parents: </label> \n              {this.state.parents}\n          </div>\n\n        <div>\n\n          {/* If teacher is assigned anduser is Admin or Teacher, allow these components to be seen */}\n          {this.state.teacher.teacherName && this.state.showEditButton && <div>\n            \n            <button onClick={this.toggleEditForm}>Edit Class</button>\n            \n            {this.state.showEditForm && <div>\n            \n            <form onSubmit = {event => this.updateClass(event)} >                    \n             \n             <h3>Edit Class Details</h3>\n\n             <label> Class Name: </label>\n             <input\n                 value={this.state.className} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"className\"\n                 placeholder={this.state.className}\n             />\n                       \n               <button> Update Name </button>\n\n           </form>\n            \n           <AddTeacher onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            \n            \n            \n            </div>} \n              {/* End of show form on showform state */}\n\n            </div>} \n\n        </div>\n\n                \n                      \n\n\n      </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class NewClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: this.props.location.state.currentUser,\n      classId: null,\n      className: \"\",\n      teacher: {teacherName: null,\n      teacherId: null},\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null,\n      classAdded: false\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Props from new class component on mount: \", this.props)\n    }\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n    genericSync(event){\n      // console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n      event.preventDefault();\n      console.log(\"Form submitted. State is:\", this.state);\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/setup/class`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n            let newClassId = responseFromServer.data.newClass._id\n\n            axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+newClassId, { withCredentials: true })\n            .then( responseForGetClass => {\n              console.log(\"Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ classId: responseForGetClass.data.classFound._id, classCode: responseForGetClass.data.classFound.classCode, \n              creator: responseForGetClass.data.classFound.creator }, \n              () => {\n                console.log(\"State after post, class added and creator assigned:\", this.state)\n              })\n\n              })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n        })\n        .catch( err => console.log(\"Err in class setup: \", err));\n        \n        this.setState({ classAdded: true}, \n          () => {\n            console.log(\"State after post, class added and creator assigned:\", this.state)\n          })\n\n    }\n    // end of handle submit\n\n\n\n\n    render(){\n\n\n      return (\n        <div>\n\n         <h1>CREATE A NEW CLASS</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"className\"\n                        placeholder=\"Mr. Smith's Homeroom \"\n                    />\n\n                    <button> Create Class </button>\n              </form>\n\n              {this.state.classAdded && this.state.classId && <div><h3> Your class: </h3>\n                  \n                <ClassBox \n                  currentUser = {this.props.location.state.currentUser}\n                  classId ={this.state.classId}\n                  className = {this.state.className}\n                  classCode = {this.state.classCode}\n                  teacherName = {this.state.teacher.teacherName}\n                  teacherId = {this.state.teacher.teacherId}\n                  schoolName = {this.state.schoolName}\n                  schoolId = {this.state.schoolId}\n                  creator = {this.state.creator}\n                  parents = {this.state.parents}\n                  />\n                  \n                </div>}\n                  \n                  \n                        \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        </div>    \n        // end of containing div\n\n      )\n\n    }\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport NewClass from \"../setup/NewClass\"\n\n\n\nexport default class NewSchool extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role\n        },\n      schoolName: \"\",\n      address: \"\",\n      city:\"\",\n      state: \"\",\n      zip: \"\",\n      role: \"Admin\",\n      image: \"\",\n      message: null,\n      schoolAdded: false,\n      schoolId: \"\",\n      creator: this.props.location.state.currentUser.userId\n    }\n  }\n  \n  \n  componentDidMount(){\n    console.log(\"State upon mount - New school component: \", this.state)\n    console.log(\"props on NewSchool mount: \", this.props)\n    const userRole = this.state.currentUser.role\n\n    axios.put(\n      // route we are hitting in the backend\n      `${process.env.REACT_APP_API_URL}/setup/role`,\n      // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n      this.state.currentUser,\n      // secure sending\n      { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"Response from server after role post is:\", responseFromServer.data);\n    \n        axios.get(`${process.env.REACT_APP_API_URL}/setup/role`+this.props.location.state.currentUser.userId, { withCredentials: true })\n        .then( responseFromTheBackend => {\n          console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n          this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n            console.log(\"State after role assigned:\", this.state)}\n            );\n  \n          })\n        .catch(err => console.log(\"Err while searching for teacher: \", err))\n    \n    })\n    .catch( err => console.log(\"Err in role setup: \", err)); \n    \n  }\n\n\n  \n  showAddedSchool(){\n    \n    if (this.state.schoolAdded)\n    \n    return(\n      \n      <div>\n\n          <h3>The School has been added: {this.state.schoolName}</h3>\n          <h4>School Address: {this.state.address}</h4>\n          {this.state.city}\n          {this.state.state}\n          {this.state.zip}\n\n        <div>\n        <Link to={{\n          pathname: \"/setup/class\",\n          state: {\n          currentUser: {\n            userId: this.props.location.state.currentUser.userId,\n            fullName: this.props.location.state.currentUser.fullName,\n            email: this.props.location.state.currentUser.email,\n            role: this.props.location.state.currentUser.role\n            },\n          schoolId: this.state.schoolId,\n          schoolName: this.state.schoolName\n          }\n          }}>Add Classes</Link>\n\n        </div>   \n          \n          </div>\n        )\n        \n      }\n      \n      \n      genericSync(event){\n        // console.log(\"The event.target is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n        // console.log(\"The state while changing:\", this.state)\n      }\n      \n      handleSubmit (event){\n        \n        event.preventDefault();\n        this.setState({ schoolAdded: true });\n        \n        axios.post(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/school`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n          )\n          .then( responseFromServer => {\n            console.log(\"Response from server after post is:\", responseFromServer.data);\n            \n            // if(responseFromServer.data) return this.setState({ message: responseFromServer.data.message })\n            this.setState({ schoolId: responseFromServer.data.school._id });\n            \n            console.log(\"Form submitted. The state is:\", this.state);\n          })\n          .catch( err => {\n            // console.log(\"Err in school setup: \", err)\n            if(err.data) return this.setState({ message: err.data.message }) \n          })\n          \n          \n        }\n        \n        \n      render(){\n          \n        return (\n        <div>\n\n         <h1>PLEASE CREATE A NEW SCHOOL</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> School Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"schoolName\"\n                        placeholder=\"MyChalkboard Academy\"\n                    />\n\n                    <label> Address: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"address\"\n                        placeholder=\"12345 Main Drive\"\n                    />\n\n                    <label> City: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <label> State: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"state\"\n                        placeholder=\"FL\"\n                    />\n\n                    <label> Zip: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"zip\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <button> Create School </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.schoolAdded && <div> { this.state.message } </div> }\n          \n            \n            {this.showAddedSchool()}\n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport NewSchool from \"../setup/NewSchool\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class SchoolList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser.userId,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n        },\n      schoolId: \"\",\n      allSchools: null,\n      visibleSchools: null,\n      message: null,\n      schoolCount: 0,\n      needsSchool: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on SchoolList mount: \", this.props )\n      console.log(\"State of SchoolList component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getschools/`+this.props.currentUser._id, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        \n        console.log(\"Schools found: \", responseFromTheBackend.data.schoolsFound)\n        this.setState({ allSchools: responseFromTheBackend.data.schoolsFound }, () => {\n          console.log(\"State after schools Found:\", this.state)}\n          );\n\n        // axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n        // .then( responseFromTheBackend => {\n        //   const { userDoc } = responseFromTheBackend.data;\n        //   this.props.onUserChange(userDoc);\n        //   console.log(\"userDoc from schoollist:\", userDoc);\n        // })\n        // .catch(err => {\n        //   this.setState({ redirect: true }, () => {console.log(\"State after user not found:\", this.state.currentUser)})\n        //   console.log(\"Err while getting the user from the checkuser route: \", err)})\n      \n      })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n\n      // {this.getSchoolCount()};\n\n    }\n\n\n    // shouldComponentUpdate(){\n\n    //   axios.get(`${process.env.REACT_APP_API_URL}/getschools/`+this.props.currentUser._id, { withCredentials: true })\n    //   .then( responseFromTheBackend => {\n    //     console.log(\"Schools found: \", responseFromTheBackend.data.schoolsFound)\n    //     this.setState({ allSchools: responseFromTheBackend.data.schoolsFound }, () => {\n    //       console.log(\"State after schools Found in should component update:\", this.state)}\n    //       );\n\n    //     })\n    //   .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n\n    // }\n\n\n\n\n    showFoundSchools = () =>{\n\n\n      return this.state.allSchools.map((eachSchool, index)=>{\n  \n       \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>School: </label> {eachSchool.schoolName}\n        \n        \n        </div>\n        <div>\n        <label>School Address: </label> {eachSchool.address}, {eachSchool.city}, {eachSchool.state}\n        </div>\n        <div>\n\n          <ul> \n          <Link to={{\n            pathname: `/school/details/`+eachSchool._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Edit School </Link>\n          </ul>\n          \n          <ul>\n\n          <Link to={{\n            pathname: `/setup/class`,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Add class </Link>\n          </ul>\n\n        \n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n    checkIfTeacher(){\n      let schoolArrayLength = this.state.allSchools.length\n\n      if (schoolArrayLength < 1) {\n\n      } else {\n\n      }\n\n    }\n\n    getSchoolCount(){\n      \n      this.setState({schoolCount: this.state.allSchools.length})\n      \n      if (this.state.schoolCount < 1){\n        this.setState({needsSchool: true})\n      }\n    }\n\n\n    render(){\n\n\n  \n\n      return (\n        \n        <div>\n\n          <div>\n          <h4>YOUR SCHOOLS COMPONENT </h4> \n            \n          </div>\n\n        {!this.state.allSchools && <div>\n\n        <h3>Add School to get started</h3>\n\n        <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Add School </Link>\n\n        </div>}\n\n\n         {this.state.allSchools && <div> {this.showFoundSchools()} \n         \n         <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Add School </Link>\n\n         </div>}    \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport ClassBox from \"./ClassBox\"\n\n\nexport default class ClassList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      allClasses: this.props.allClasses,\n      visibleClasses: null,\n      schools: [],\n      message: null,\n      showTeacherSchools: false,\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassList mount: \", this.props )\n      console.log(\"State of ClassList component on mount: \", this.state)\n\n      // axios.get(`${process.env.REACT_APP_API_URL}/getclasses/`+this.props.currentUser._id,{ withCredentials: true })\n      // .then( responseFromTheBackend => {\n      //   console.log(\"Classes found: \", responseFromTheBackend.data.classesFound)\n      //   this.setState({ allClasses: responseFromTheBackend.data.classesFound, showTeacherSchools: true }, () => {\n      //     console.log(\"State after classes Found:\", this.state)}\n      //     );\n\n      //   })\n      // .catch(err => console.log(\"Err while searching for classes: \", err))\n    }\n\n\n    showFoundClasses = () =>{\n\n      console.log(\"show found classes function\")\n      \n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>Class: </label> {eachClass.className}\n        </div>\n        <div>\n        <label>Teacher: </label> {eachClass.teacher.teacherName}\n        </div>\n        <div>\n\n           {/* /class/details/:classlId */}\n\n           <ul> \n            <Link to={{\n            pathname: `/class/details/`+eachClass._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n                classId: eachClass._id,\n                className: eachClass.className,\n                classCode: eachClass.classCode,\n                teacherName: eachClass.teacher.teacherName,\n                teacherId: eachClass.teacher.teacherId,\n                schoolName: eachClass.schoolName,\n                schoolId: eachClass.schoolId,\n                creator: eachClass.creator,\n                parents: eachClass.parents\n             }\n           }}> View Class </Link>\n          </ul>\n\n\n\n\n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n    showTeacherSchools = () =>{\n\n      console.log(\"show schools for teacher\")\n      \n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        this.state.schools.push(eachClass.schoolName)\n\n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>School: </label> {eachClass.schoolName}\n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n\n\n\n    render(){\n\n\n\n      return (\n        \n        <div>\n\n          <div>\n          <h4>YOUR CLASSES COMPONENT </h4> \n            \n          </div>\n\n          {!this.state.allClasses || this.state.allClasses.length == 0 && <div>\n\n          <h3>Add a Class to a School to get Started</h3>\n\n          \n          </div>}\n\n\n         {this.state.allClasses && <div> {this.showFoundClasses()} </div>}    \n\n         {this.state.showTeacherSchools && <div>\n           \n           Classes for teacher\n           \n           {this.showTeacherSchools()}\n           \n           </div>}\n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\n\nexport default class AdminLanding extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: this.props.allClasses,\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on AdminLanding mount: \", this.props )\n      console.log(\"State of AdminLanding component on mount: \", this.state)\n\n      \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h2> ADMIN LANDING PAGE </h2> \n\n\n          <div className=\"schoollist\">\n            <SchoolList\n            currentUser={this.props.currentUser}\n            allClasses={this.props.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></SchoolList>\n          </div>\n\n          <div className=\"classlist\">\n            <ClassList\n            currentUser={this.props.currentUser}\n            allClasses={this.props.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></ClassList>\n          </div>\n\n\n          </div>\n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\n\nexport default class Posting extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      postId: null,\n      creation: \"\",\n      description: \"\",\n      files: \"\",\n      class: \"\",\n      creator: \"\",\n      likes: [],\n      comments: [],\n      allPostings: [],\n      visiblePostings: null,\n      parents: [],\n      allClasses: this.props.allClasses,\n    }\n  }\n\n    componentDidMount(){\n\n      console.log(\"Props on Posting mount: \", this.props )\n      console.log(\"State of Posting component on mount: \", this.state)\n\n      return this.state.allClasses.map((eachClass, index)=>{\n\n          axios.get(`${process.env.REACT_APP_API_URL}/posting/`+eachClass._id, { withCredentials: true })\n          .then( postingsFound => {\n            \n            console.log(\"Postings found for class Id: \", postingsFound.data.posts)\n            \n            this.setState({ allPostings: [...this.state.allPostings, ...postingsFound.data.posts ] }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n\n            // this.setState({ myArray: [...this.state.myArray, ...[1,2,3] ] })\n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n\n       })\n\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=> {console.log(\"state after changes\", this.state)});\n    }\n\n    selectChange(event){\n      console.log(\"what is: \", event.target.value)\n      let value = event.target.value;\n      this.setState({ class: value }, ()=> {console.log(\"state after class selected\", this.state)});\n    }\n\n    handleFiles(event){\n      this.setState({\n        files: event.target.files,\n       }, ()=> {console.log(\"state after files uploaded\", this.state)})\n    }\n\n    submitPostForm(event){\n\n      event.preventDefault();\n      const formData = new FormData();\n      \n      for(let i = 0, numFiles = this.state.files.length; i < numFiles; i++) {\n      let file = this.state.files[i]   \n       formData.append('file', this.state.files[i])\n       }\n    \n      formData.append('creation', this.state.creation)\n      formData.append('description', this.state.creation)\n      \n      axios.post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/`+this.state.class,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        formData,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"New post created: \", responseFromServer.data.newPost)\n\n         this.setState({ postId:responseFromServer.data.newPost._id }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n          // axios.get(`${process.env.REACT_APP_API_URL}/posting/`+this.state.classId, { withCredentials: true })\n          // .then( updatedClass => {\n          //   console.log(\"Class found after edit: \", updatedClass.data.classFound)\n            \n\n          //   this.setState({ className: updatedClass.data.classFound.className }, () => {\n          //     console.log(\"State after updates:\", this.state)}\n          //     );  \n\n          //   })\n          // .catch(err => console.log(\"Err while searching for class: \", err))\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n    }\n\n    renderPostImages(images){\n              \n      return images.map((image,index) => {\n        return  <div key={index}><img src={image} alt=\"\" className=\"img-responsive\" /><br/></div> \n     });\n\n    }\n\n\n    showLikes(post){\n              \n        return  <div>{post.likes.length} liked <br/></div> \n     \n    }\n\n    addLike(post){\n      \n      console.log(\"the post we are liking is: \", post)\n     \n      \n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/like/`+post,\n        this.props.currentUser,\n        // secure sending\n        {withCredentials: true}\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"post liked: \", responseFromServer.data.postLiked)\n\n        //  this.setState({ postId:responseFromServer.data.newPost._id }, ()=>{console.log(\"state after new post created: \", this.state)})\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n\n    }\n\n\n\n\n\n    showPostings(){\n      \n      return this.state.allPostings.map((eachPost, index)=>{\n  \n        return( \n\n        <div key={index}>\n          {eachPost.creator.fullName}\n          <br/>\n          {eachPost.class.className}\n          <br/>\n          {this.renderPostImages(eachPost.files)}\n          <br/>\n          <button onClick={() => this.addLike(eachPost._id)}>Like this Post</button>\n          <br/>\n          {this.showLikes(eachPost)}\n          <br/>\n        </div>\n        )\n  \n      })\n\n    }\n\n    showClassesForPost(){\n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n          <option key={index} name=\"class\" value={eachClass._id}>{eachClass.className}</option>\n\n        )\n  \n      })\n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h2> STORY </h2> \n\n          Add a New Story\n          <br/>\n\n          <form onSubmit={event => this.submitPostForm(event)} id=\"postingform\" encType=\"multipart/form-data\">\n              \n              <label for=\"class\">Select class:</label>\n              <select onChange={event => this.selectChange(event)}>\n                <option name=\"class\" value=\" \">Select a Class</option>\n                {this.showClassesForPost()}\n              </select>\n              <br/>\n              \n              <label for=\"creation\">Post Date:</label>\n              \n              <input \n                type=\"date\" name=\"creation\" \n                placeholder=\"Date\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.creation} /> \n                \n              <br/>\n\n              <label for=\"description\">Caption:</label>\n              <input \n                type=\"text\" \n                name=\"description\" \n                placeholder=\"Subject\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.description} /> \n               \n              <br/>\n\n              <label for=\"files\">Select Images:</label>\n              <input type=\"file\" name=\"files\" multiple onChange = {event => this.handleFiles(event)} \n                />\n\n              <br/>\n\n              <button>Add Post</button>\n          </form>\n\n          <div>\n            <h4>Posts</h4>\n\n            {this.showPostings()}\n\n\n          </div>\n\n\n\n         </div>\n                \n\n\n\n       </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\nimport Posting from \"../posts/Posting\"\n\nexport default class TeacherLanding extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: this.props.allClasses,\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on TeacherLanding mount: \", this.props )\n      console.log(\"State of TeacherLanding component on mount: \", this.state)\n      \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h2> Teacher LANDING PAGE </h2> \n\n\n          <div className=\"classlist\">\n            <ClassList\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></ClassList>\n\n          </div>\n\n          <div>\n            <Posting\n            allClasses={this.state.allClasses}\n            currentUser={this.props.currentUser}\n            // classId={this.props.classId} \n            >\n\n              POSTING LIST\n            </Posting>\n\n          </div>\n\n\n\n          </div>\n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport Setup from \"../setup/Setup\"\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport AdminLanding from \"./AdminLanding\"\nimport TeacherLanding from \"./TeacherLanding\"\n\nexport default class Landing extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: null\n    }\n  }\n\n\n    componentDidMount(){\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getclasses/`+this.props.currentUser._id,{ withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Classes found: \", responseFromTheBackend.data.classesFound)\n        this.setState({ allClasses: responseFromTheBackend.data.classesFound}, () => {\n          console.log(\"State after classes Found:\", this.state)}\n          );\n\n        })\n      .catch(err => console.log(\"Err while searching for classes: \", err))\n\n\n\n  \n    }\n\n\n    render(){\n\n      if (!this.state.allClasses) {\n        return <div />\n      }\n\n      return (\n        \n        <div>\n\n        \n          <h2>YOUR LANDING PAGE </h2> \n\n\n          {this.props.currentUser.role == \"Admin\" && \n          \n            <div>\n            <AdminLanding\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            ></AdminLanding>\n            </div>\n          \n          }\n\n          {this.props.currentUser.role == \"Teacher\" && \n           <div>\n             <TeacherLanding\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            ></TeacherLanding>\n           </div>\n\n          }\n\n\n          {this.props.currentUser.role == \"Parent\" && \n           <div>\n             PARENT LANDING PAGE\n           </div>\n          } \n\n          {this.props.currentUser.role == \"Unassigned\" && \n           <div>\n             Please complete setup\n\n             <Setup \n              currentUser = { this.props.currentUser } \n            />         \n            \n\n           </div>} \n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport AdminLanding from \"../landing/AdminLanding\"\nimport Landing from \"../landing/Landing\"\n\n\n\nexport default class Login extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"\",\n            loggedIn: false,\n\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/login`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            \n            this.setState({ loggedIn: true });\n\n        })\n        .catch( err => {\n            // console.log(\"err: \", err.response)\n            if(err.response.data) return this.setState({ message: err.response.data.message })\n        });\n    }\n\n\n\n    render(){\n        \n        const { fullName, email, password } = this.state;\n\n        return (\n\n            <div>\n\n            {!this.state.loggedIn &&\n            <section>\n                <h2> Login </h2>\n                <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                    <button> Login </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            </section>\n            }\n\n            {this.state.loggedIn && \n            \n            <Landing\n            currentUser = {this.props.currentUser}\n            />\n            \n            }\n\n            </div>\n\n        )\n    }\n}","import React from \"react\";\n\n\nexport default class Home extends React.Component {\n\n    render(){\n        return (\n            <section>\n                <h1> Home Page </h1>\n                <p> Welcome to the best app ever! ❤️ </p>\n            </section>\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\nimport Home from \"../user-pages/Signup\"\nimport Login from \"../user-pages/Login\"\n\nexport default class Account extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userId: this.props.location.state.currentUser.userId, \n            fullName: this.props.location.state.currentUser.fullName,\n            email: this.props.location.state.currentUser.email,\n            password: \"\",\n            message: null,\n            role: this.props.location.state.currentUser.role\n        \n        }\n\n    }\n\n    componentDidMount() {\n      console.log(\"Props from Account component on mount: \", this.props)\n      console.log(\"State from Account component on mount: \", this.state)\n    }\n\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    updateName (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/account/name/`+this.state.userId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n          .then( userDataFromServer => {\n            console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n            \n    \n            })\n          .catch(err => console.log(\"Err while searching for user: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n\n    updateEmail (event){\n      // console.log(\"submitting form\");\n      event.preventDefault();\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/account/email/`+this.state.userId,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          \n        \n        axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n        .then( userDataFromServer => {\n          console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n          \n  \n          })\n          .catch(err => console.log(\"Err while searching for user: \", err))\n          \n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n      }\n      \n      \n      updatePassword (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n        \n        axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/account/password/`+this.state.userId,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n          )\n          .then( responseFromServer => {\n            \n            \n            axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n            .then( userDataFromServer => {\n              console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n              \n              \n            })\n            .catch(err => console.log(\"Err while searching for user: \", err))\n            \n          })\n          .catch( err => console.log(\"Err in update password: \", err));\n        }\n        \n        \n        deleteAccount(event){\n\n          window.confirm(\"Please confirm that you wish to delete your user Account before proceeding. All user data will be removed once submitted.\")\n          \n          event.preventDefault();\n          \n          axios.post(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n          .then( responseFromServer => {\n          console.log(\"User deleted: \", responseFromServer.data.theDeletedUser)   \n\n          })\n          .catch( err => console.log(\"Err in delete: \", err)\n          )\n       }\n\n\n\n\n    render(){\n\n      console.log(\"this.props:\", this.props)\n      \n      return (\n        <section>\n\n            <h2> {this.state.fullName} </h2>\n            \n            <form onSubmit = {event => this.updateName(event)} >                    \n              <label> User Name: </label>\n              <input\n                  value={this.state.fullName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder={this.state.fullName}\n              />\n              <button> Save </button>\n            </form>\n\n            <form onSubmit = {event => this.updateEmail(event)}>           \n                <label> Email: </label>\n                <input\n                    value={this.state.email} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"email\"\n                    name=\"email\"\n                    placeholder={this.state.email}\n                />\n              <button> Save Email </button>\n            </form>\n\n            <form onSubmit = {event => this.updatePassword(event)}>\n                <label> Password</label>\n                <input\n                    value={this.state.password} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Your password\"\n                />\n                <button> Update Password </button>\n            </form>\n\n            <button onClick={event => this.deleteAccount(event)}>Delete Account</button>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n            { this.state.message && <div> { this.state.message } </div> } \n        \n        </section>\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport ClassBox from \"../class/ClassBox\"\n\nexport default class AddClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      class: [],\n      classCode: \"\",\n      message: null,\n      classCodeEntered: false\n      }\n    }\n\n\n    searchClasses = () =>{\n\n      return this.state.visibleClasses.map((eachClass, i)=>{\n  \n        return(\n          <ClassBox key={i} \n          className={eachClass.className}\n          classCode={eachClass.classCode}\n          theSchool={eachClass.schoolName}\n           />\n        )\n  \n      })\n  \n    }\n\n\n    genericSync(event){\n      console.log(\"Event Target Value: \", event.target.value)\n      // const { name, value } = event.target;\n      this.setState({ [event.target.name]: event.target.value });\n      console.log(\"The state is\", this.state)\n    }\n\n\n    handleSubmit (event){\n      console.log(\"Form submitted\");\n      event.preventDefault();\n\n      this.setState({ classCodeEntered: true });\n\n      const formClassCode = this.state.classCode\n      console.log(\"The state is\", this.state.classCode)\n\n      axios.get(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/class/code`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          formClassCode,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          console.log(\"Class found is:\", responseFromServer.data);\n          // const { classesDoc } = responseFromServer.data;\n\n          // this.setState({ class: classesDoc });\n          \n      })\n      .catch( err => {\n        console.log(\"Error while adding class: \", err)\n        this.setState({ message: err });\n        }\n      );\n  }\n\n\n    render(){\n\n      console.log(this.props)\n      return (\n        <div>\n\n         <h1>PLEASE ENTER YOUR CLASS CODE</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Code: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"classCode\"\n                        placeholder=\"123XYZ\"\n                    />\n        \n                    <button> Submit Class Code </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.classCodeEntered && <div> \n                \n                <h3>Classes Found:</h3>\n\n                <div>\n                  {this.state.class[0]}\n                </div>\n                  \n                    \n                </div> }\n          \n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n}  // end of Class","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class FindClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role,\n      },\n      classCode: null,\n      classFound: false,\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: null,\n        teacherId: null\n      },\n      schoolName: \"\",\n      schoolId: \"\",\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Props - Find class component on mount: \", this.props);\n      console.log(\"state on find class component on mount:\", this.state)\n\n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/setup/role`,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        this.state.currentUser,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          console.log(\"Response from server after role post is:\", responseFromServer.data);\n      \n          axios.get(`${process.env.REACT_APP_API_URL}/setup/role/`+this.state.currentUser.userId, { withCredentials: true })\n          .then( responseFromTheBackend => {\n            console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n            this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n              console.log(\"State after role assigned:\", this.state)}\n              );\n    \n            })\n          .catch(err => console.log(\"Err while searching for teacher: \", err))\n      \n      })\n      .catch( err => console.log(\"Err in role setup: \", err)); \n\n\n\n    }\n\n\n    genericSync(event){\n      console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=>console.log(\"State as changing: \", this.state));\n    }\n\n    findClass (event){\n      event.preventDefault();\n      event.target.value = \"\";\n\n      console.log(\"Form for findclass submitted. State is:\", this.state);\n\n        axios.get(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/classinfo/code/`+this.state.classCode,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n           \n              console.log(\"Class found: \", responseFromServer.data)\n              \n\n              this.setState({ \n                classCode: responseFromServer.data.classFound.classCode, \n                classFound: true,\n                classId: responseFromServer.data.classFound._id, \n                className: responseFromServer.data.classFound.className,\n                teacher: {\n                  teacherName: responseFromServer.data.classFound.teacher.teacherName,\n                  teacherId: responseFromServer.data.classFound.teacher.teacherId\n                },\n                schoolName: responseFromServer.data.classFound.schoolName,\n                schoolId: responseFromServer.data.classFound.schoolId,\n                creator: responseFromServer.data.classFound.creator,\n                image: \"\",\n                parents: responseFromServer.data.classFound.parents,\n                message: null\n              }, \n              () => {\n                console.log(\"State after class found:\", this.state)\n              })\n            })\n        .catch( err => console.log(\"Err in class find \", err));\n\n        \n        }\n\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n\n    render(){\n\n\n      return (\n        <div>\n\n  \n\n          <h4 className=\"title\"> Find Class</h4>\n          <label>Search by class code to add yourself as teacher.</label>\n          \n          <form onSubmit = {event => this.findClass(event)} >  \n\n            <input\n                //  value={this.state.classCode} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"classCode\"\n                 placeholder=\"Your class code\"\n             />\n\n\n          <button>Find class </button>\n          </form>\n\n          \n\n            <h4>Found class:</h4> \n           \n            {this.state.classFound && <div>\n\n              <ClassBox \n                  currentUser = {this.state.currentUser}\n                  classId ={this.state.classId}\n                  className = {this.state.className}\n                  classCode = {this.state.classCode}\n                  teacherName = {this.state.teacher.teacherName}\n                  teacherId = {this.state.teacher.teacherId}\n                  schoolName = {this.state.schoolName}\n                  schoolId = {this.state.schoolId}\n                  creator = {this.state.creator}\n                  parents = {this.state.parents}\n                  />\n                  \n              \n            </div>}\n\n          \n                \n                \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        {/* end of containing div */}\n        \n        </div>    \n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class SchoolBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      // currentUser: {\n      //   userId: this.props.location.state.currentUser.userId,\n      //   fullName: this.props.location.state.currentUser.fullName,\n      //   email: this.props.location.state.currentUser.email,\n      //   role: this.props.location.state.currentUser.role\n      //   },\n      schoolId: this.props.location.state.schoolId,\n      schoolName: this.props.location.state.schoolName,\n      address: this.props.location.state.address,\n      city: this.props.location.state.city,\n      state: this.props.location.state.state,\n      zip: this.props.location.state.zip,\n      showEditForm: false,\n      message: null\n    }\n  }\n\n\n    componentDidMount(){\n      console.log(\"Props on SchoolBox mount: \", this.props )\n      console.log(\"State of SchoolBox component on mount: \", this.state)\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n  \n    updateSchool(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/school/update/`+this.state.schoolId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/schoolinfo/`+this.state.schoolId, { withCredentials: true })\n          .then( updatedSchool => {\n            console.log(\"School found after edit: \", updatedSchool.data.schoolFound)\n            \n\n            this.setState({ schoolName: updatedSchool.data.schoolFound.schoolName }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n\n\n    \n            })\n          .catch(err => console.log(\"Err while searching for school: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in school update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n    deleteSchool(event){\n      \n      window.confirm(\"Please confirm that you wish to delete this school before proceeding. All school data and classes will be removed.\")\n      \n      event.preventDefault();\n      \n      axios.post(`${process.env.REACT_APP_API_URL}/school/delete/`+this.state.schoolId, { withCredentials: true })\n      .then( responseFromServer => {\n        \n        let deletedSchoolId = responseFromServer.data.deletedSchool._id\n        console.log(\"School deleted: \", responseFromServer.data.deletedSchool)   \n\n        this.setState({message: \"The school and all associated data have been removed.\"})\n\n\n        axios.post(`${process.env.REACT_APP_API_URL}/classes/delete/`+deletedSchoolId, { withCredentials: true })\n        .then( responseAfterClasses => {\n        \n          console.log(\"Classes found for school: \", responseAfterClasses.data.foundClasses)\n          console.log(\"Classes deleted: \", responseAfterClasses.data.deletedClasses)   \n\n         let classesArray = responseAfterClasses.data.foundClasses\n\n         return classesArray.map((eachClass, index)=>{\n              \n              axios.post(`${process.env.REACT_APP_API_URL}/postings/delete/`+eachClass._id, { withCredentials: true })\n              .then( responseAfterClasses => {\n            \n              console.log(\"Postings found for deleted classes: \", responseAfterClasses.data.foundPosts)\n              console.log(\"Postings deleted: \", responseAfterClasses.data.deletedPosts)   \n  \n\n             \n          \n            })\n           .catch( err => console.log(\"Err in delete: \", err))\n\n          })\n       })\n      .catch( err => console.log(\"Err in delete: \", err))\n       })\n      .catch( err => console.log(\"Err in delete: \", err))\n   }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <h2> {this.state.schoolName} </h2>\n\n          <div>\n          <label>School Address: </label>{this.state.address}\n          </div>\n\n          <div>\n          <label>City: </label> {this.state.city}\n          </div>\n\n          <div>\n          <label>State: </label>{this.state.state}\n          </div>\n\n          <div>\n          <label>School Zip: </label>{this.state.zip}\n          </div>\n\n          <div>\n          <button onClick={this.toggleEditForm}>Edit School</button>  \n          </div>\n\n          <div>\n          <button onClick={event => this.deleteSchool(event)}>Delete School</button>\n          </div>\n\n          {this.state.showEditForm && \n          <section>\n            <h2> Edit Details for {this.state.schoolName} </h2>\n            \n            <form onSubmit = {event => this.updateSchool(event)} >                    \n             \n              <label> School: </label>\n              <input\n                  value={this.state.schoolName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"schoolName\"\n                  placeholder={this.state.fullName}\n              />\n                        \n                <label> Address: </label>\n                <input\n                    value={this.state.address} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"address\"\n                    placeholder={this.state.address}\n                />\n\n                <label> City </label>\n                \n                <input\n                    value={this.state.city} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"city\"\n                    placeholder={this.state.city}\n                />\n\n                <input\n                    value={this.state.state} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"state\"\n                    placeholder={this.state.state}\n                />\n\n                <input\n                    value={this.state.zip} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"zip\"\n                    placeholder={this.state.zip}\n                />\n\n                <button> Update School Details </button>\n            </form>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n        \n        </section>}\n\n            { this.state.message && <div> { this.state.message } </div> }\n\n            \n      \n\n                  \n                \n                      \n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\n\nexport default class ClassDetails extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: this.props.location.state.currentUser,\n      classId: this.props.location.state.classId,\n      className: this.props.location.state.className,\n      teacher: {\n        teacherName: this.props.location.state.teacherName,\n        teacherId: this.props.location.state.teacherId},\n      teacherAdded: false,\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: this.props.location.state.classCode,\n      creator: this.props.location.state.creator,\n      parents: this.props.location.state.parents,\n      showEditButton: false,\n      showEditForm: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassDetails mount: \", this.props )\n      console.log(\"State of ClassDetails component on mount: \", this.state)\n\n      if (this.state.currentUser.role == \"Admin\" || this.state.currentUser.role == \"Teacher\") {\n        this.setState({showEditButton:true}, () => {console.log(\"State after edit form condition:\", this.state)}\n          )\n        }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n  \n    syncCurrentTeacher(teacherData){\n      console.log(\"Teacher data passed to synccurrentteacher\", teacherData)\n      this.setState({ teacher: {teacherName: teacherData.teacherName, teacherId: teacherData.teacherId}  })\n    }\n  \n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n\n\n    updateClass(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/class/update/`+this.state.classId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n          .then( updatedClass => {\n            console.log(\"Class found after edit: \", updatedClass.data.classFound)\n            \n\n            this.setState({ className: updatedClass.data.classFound.className }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n    \n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in class update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h3>Class Name: </h3> \n            <h4>{this.state.className}</h4>\n          </div>\n                \n          <div>\n            <label>Class Code: </label> \n              {this.state.classCode}\n          </div>\n                \n        <div>\n                  \n          <label>Class Teacher: </label> \n\n          {/* If no teacher is assigned, and user is Admin or Teacher, allow view of assign teacher */}\n          {!this.state.teacher.teacherName && <div> {!this.state.teacher.teacherName} \n           No Teacher Assigned \n                  \n           {this.state.showEditButton && <div>\n            <AddTeacher\n            onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n           \n            </div>}\n\n          {/* If teacher is assigned, show their name.  */}\n            {this.state.teacher.teacherName}\n        \n         </div>\n\n         <div>\n            <label>Parents: </label> \n              {this.state.parents}\n          </div>\n\n        <div>\n\n          {/* If teacher is assigned anduser is Admin or Teacher, allow these components to be seen */}\n          {this.state.teacher.teacherName && this.state.showEditButton && <div>\n            \n            <button onClick={this.toggleEditForm}>Edit Class</button>\n            \n            {this.state.showEditForm && <div>\n            \n            <form onSubmit = {event => this.updateClass(event)} >                    \n             \n             <h3>Edit Class Details</h3>\n\n             <label> Class Name: </label>\n             <input\n                 value={this.state.className} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"className\"\n                 placeholder={this.state.className}\n             />\n                       \n               <button> Update Name </button>\n\n           </form>\n            \n           <AddTeacher onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            \n            \n            \n            </div>} \n              {/* End of show form on showform state */}\n\n            </div>} \n\n        </div>\n\n                \n                      \n\n\n      </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link, Redirect } from \"react-router-dom\";\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport Setup from \"./components/setup/Setup\";\n// import Logout from \"./components/user-pages/Logout\"\nimport Home from \"./components/Home\";\nimport Account from \"./components/user-pages/Account\"\nimport Role from \"./components/Home\";\nimport NewSchool from \"./components/setup/NewSchool\"\nimport NewClass from \"./components/setup/NewClass\"\nimport AddClass from \"./components/setup/AddClass\"\nimport FindClass from \"./components/setup/FindClass\"\nimport Landing from \"./components/landing/Landing\"\nimport SchoolBox from './components/school/SchoolBox';\nimport ClassBox from \"./components/class/ClassBox\"\nimport ClassDetails from \"./components/class/ClassDetails\"\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    \n    this.state = {\n      currentUser: null,\n      // redirect: false\n    }\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n    .then( responseFromTheBackend => {\n      console.log(\"User in APP.JS: \", responseFromTheBackend)\n      const { userDoc } = responseFromTheBackend.data;\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => {\n      // this.setState({ redirect: true }, () => {console.log(\"State after user not found:\", this.state.currentUser)})\n      console.log(\"Err while getting the user from the checkuser route: \", err)})\n  }\n\n  syncCurrentUser(user){\n    this.setState({ currentUser: user }, () => {console.log(\"State after user set:\", this.state.currentUser)})\n  }\n\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //     return <Redirect to='/' />\n  //   }\n  // }\n\n\n  handleLogout(event){\n    console.log(\"Handling logout\");\n    event.preventDefault();\n\n    axios.delete(`${process.env.REACT_APP_API_URL}/logout`,\n        this.state,\n        // secure sending\n        { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"response is:\", responseFromServer.data, \"the props ----- \", this.props);\n        let userDoc = responseFromServer.data.userDoc;\n        // this.props.onUserChange(userDoc);\n        this.syncCurrentUser(userDoc);\n        alert(\"You are logged out.\")\n\n        // possible  set state for redirecting:\n        // this.setState({ redirect: true }, () => {console.log(\"State after user not found:\", this.state.currentUser)})\n    })\n    .catch( err => {\n        console.log(\"err: \", err)\n        // if(err.response.data) return this.setState({ message: err.response.data.message })\n    });\n  \n    \n  }\n\n\n\n\n  render (){   \n    // console.log(\"the state in APPJS: \", this.state);\n\n\n    return (\n\n      <div >\n        <header>\n          <nav>\n            <NavLink to=\"/\" > Home </NavLink>\n            {/* If no current user, signup will show. */}\n            { !this.state.currentUser && <NavLink to=\"/signup\"> Signup </NavLink> }\n            { !this.state.currentUser && <div> <NavLink to=\"/login\"> Login </NavLink> </div> }\n            \n            {/* If current user is signed in, Nav will show: */}\n            <div>\n            { this.state.currentUser && <Link to=\"/logout\" onClick ={ event => this.handleLogout(event)}> Logout </Link> }  \n            { this.state.currentUser && this.state.currentUser.role && <NavLink to=\"/landing\"> Landing </NavLink> }\n            { this.state.currentUser && this.state.currentUser.role && \n            //  <NavLink to=\"/account\"> Account </NavLink>\n             \n             <NavLink to={{\n                pathname: `/account`,\n                state: {\n                  currentUser: {\n                    userId: this.state.currentUser._id,\n                    fullName: this.state.currentUser.fullName,\n                    email: this.state.currentUser.email,\n                    role: this.state.currentUser.role\n                  }\n                }\n              }}> Account </NavLink>\n            \n            }\n            \n            </div>\n          </nav>\n        </header>\n\n        <Switch>\n        {/* this is example how we would render component normally */}\n        {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n          <Route exact path=\"/\" component={ Home }   /> \n\n          {/* <Redirect to='/' component={Home}/> */}\n\n          {/* if we have to pass some props down to a component,\n          we can't use a standard way of rendering using component={},\n          but instead we have to use render = {}  like in the example below */}\n          <Route exact path=\"/signup\" render = { () => \n            <Signup \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n\n          {<Route exact path=\"/login\" render = { () => \n            <Login \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}\n\n          <Route exact path=\"/account\" component = {Account}/>\n\n          {/* {<Route exact path=\"/account\" render = { () => \n            <Account\n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>} */}\n          \n          <Route exact path=\"/setup/admin\" component={ NewSchool }   /> \n          \n          <Route exact path= \"/setup/teacher\" component={ FindClass } /> \n          \n          <Route exact path= \"/setup/parent\" component={ AddClass }/> \n          \n          <Route exact path=\"/setup/class\" component={ NewClass }/>\n\n          {<Route exact path=\"/setup/admin\" render = { () => \n            <NewSchool\n              currentUser = { this.state.currentUser }   \n              // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}  \n\n          <Route exact path=\"/school/details/:schoolId\" component = {SchoolBox} /> \n        \n          <Route exact path=\"/class/details/:classlId\" component = {ClassDetails} /> \n\n\n          {<Route exact path=\"/landing\" render = { () => \n            <Landing\n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}  \n\n          \n\n          \n\n        </Switch>\n          \n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}