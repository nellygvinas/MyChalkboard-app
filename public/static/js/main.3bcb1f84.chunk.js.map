{"version":3,"sources":["components/setup/Role.js","components/setup/Setup.js","components/user-pages/Signup.js","components/setup/AddTeacher.js","components/class/ClassBox.js","components/setup/NewClass.js","components/setup/NewSchool.js","components/school/SchoolList.js","components/class/ClassList.js","components/landing/AdminLanding.js","components/landing/Landing.js","components/user-pages/Login.js","components/Home.js","components/user-pages/Account.js","components/setup/AddClass.js","components/setup/FindClass.js","components/school/SchoolBox.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Setup","props","state","currentUser","userId","_id","fullName","email","role","classes","image","message","console","log","this","axios","put","process","withCredentials","then","responseFromServer","catch","err","setState","handleRole","to","pathname","onClick","assignParent","Signup","password","event","target","name","value","preventDefault","post","userDoc","data","onUserChange","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","AddTeacher","search","e","searchTerm","allUsers","filteredUsers","filter","eachUser","toUpperCase","includes","visibleUsers","showFoundUsers","map","i","addTeacher","classId","teacher","teacherName","teacherId","classCode","creator","parents","classAdded","get","responseFromTheBackend","usersFound","teacherItem","responseForUpdateClass","responseForGetClass","classFound","teacherDoc","onTeacherChange","className","ClassBox","toggleEditForm","showEditForm","location","teacherAdded","schoolName","schoolId","showEditButton","teacherData","syncCurrentTeacher","NewClass","newClassId","newClass","NewSchool","address","city","zip","schoolAdded","theUpdatedUser","school","showAddedSchool","SchoolList","showFoundSchools","allSchools","eachSchool","index","key","visibleSchools","schoolsFound","length","ClassList","showFoundClasses","allClasses","eachClass","visibleClasses","classesFound","AdminLanding","Landing","Login","loggedIn","alert","response","Home","Account","userDataFromServer","updateName","updateEmail","updatePassword","AddClass","searchClasses","theSchool","class","classCodeEntered","formClassCode","FindClass","SchoolBox","updatedSchool","schoolFound","updateSchool","App","syncCurrentUser","user","delete","handleLogout","exact","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bcb1f84.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class Role extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password:\"\",\n      role: \"Unassigned\",\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value })\n    }\n\n    syncCurrentUSer(user){\n      this.setState({ currentUser: user })\n    }\n\n    handleSubmit (event){\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    // axios.post(\n    //     // route we are hitting in the backend\n    //     `${process.env.REACT_APP_API_URL}/signup`,\n    //     // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n    //     this.state,\n    //     // secure sending\n    //     { withCredentials: true }\n    // )\n    // .then( responseFromServer => {\n    //     // console.log(\"response is:\", responseFromServer);\n    //     const { userDoc } = responseFromServer.data;\n    //     this.props.onUserChange(userDoc);\n    // })\n    // .catch( err => console.log(\"Err in signup: \", err));\n\n    } //end of handleSubmit\n\n\n    render(){\n\n\n      return (\n\n        <div>\n\n           <h2>ROLE COMPONENT </h2>\n                \n\n\n\n\n\n\n\n        </div>\n      )\n\n\n\n\n    }  \n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport Role from \"../setup/Role\";\n\n\nexport default class Setup extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser._id,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n      },\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Setup component - Initial state upon mount\", this.state)\n    }\n\n    shouldComponentUpdate() {\n      console.log(\"Setup component - state upon update\", this.state)\n\n    }\n\n\n    handleRole(){\n    \n      console.log(\"submitting handle role\");\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/role`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state.role,\n          // secure sending\n          { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            console.log(\"response is:\", responseFromServer);\n        })\n        .catch( err => console.log(\"Err in role setup: \", err)); \n\n    } //end of handleRole\n\n\n    assignAdmin() {\n      this.setState(({currentUser}) => ({currentUser: {\n        ...currentUser,\n        role: \"Admin\",\n      }}))\n    \n    console.log(\"State after assign Admin\", this.state.currentUser)\n    }\n\n    assignTeacher(){\n      this.setState({ role: \"Teacher\" })\n      console.log(\"This.state Role assigned as Teacher:\", this.state.role)\n      this.handleRole()\n    }\n\n    assignParent() {\n      this.setState({ role: \"Parent\" })\n      console.log(\"This.state Role assigned as Parent:\", this.state.role)\n      this.handleRole()\n    }\n\n\n\n\n    render(){\n\n      console.log(\"Do I have user props in Setup? This.props.currentUser: \", this.props.currentUser)\n\n      return (\n\n        <div>\n          <h1>SETUP COMPONENT</h1>\n\n           <h2> Welcome, {this.props.currentUser.fullName}! Please select your role: </h2>\n          \n\n          <div>\n           {/* <Link to= \"/setup/admin\" onClick={() => this.assignAdmin()}> Administrator </Link>\n          </div> */}\n\n          <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Administrator </Link>\n          </div>\n          \n          <div>\n          <Link to={{\n            pathname: '/setup/teacher',\n            state: {\n              currentUser: {\n                userId: this.state.currentUser.userId,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Teacher\"\n              }\n            }}\n            }> Teacher </Link>\n          </div>\n\n          <div>\n          <Link to= \"/setup/parent\" onClick={this.assignParent}> Parent </Link>\n          </div>     \n           \n\n\n\n        </div>\n      )\n\n\n\n    }  \n\n} // end of Setup component\n\n","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\n\nexport default class Signup extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"Unassigned\",\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/signup`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            console.log(\"userDoc from signup:\", userDoc);\n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n    render(){\n        console.log(\"User props in Signup? This.props.currentUser: \", this.props.currentUser)\n        // console.log(\"The current user's role:\", this.props.currentUser[0])\n        // const userProps = {fullName: this.props.currentUser.fullName, email: this.props.currentUser.email, role: this.props.currentUser.role};\n        const { fullName, email, password, role } = this.state;\n        console.log(\"SIGNUP STATE: \", this.state);\n        if(this.props.currentUser){\n            return(\n            \n            <div>\n\n            <Setup \n              currentUser = { this.props.currentUser } \n            />         \n            </div>\n            )\n        }\n\n        return (\n            <section>\n                <h2> Sign up </h2>\n                <form onSubmit = {event => this.handleSubmit(event) } >\n                                        \n                    <label> Full name: </label>\n                    <input\n                        value={fullName} // this.state.fullName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"fullName\"\n                        placeholder=\"Jane Doe\"\n                    />\n\n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                    <button> Sign Up </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            \n            </section>\n\n\n\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class AddTeacher extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      teacher: {teacherName: null,\n        teacherId: null},\n      allUsers: null,\n      visibleUsers: null,\n      searchTerm: \"\",\n      // schoolName: this.props.location.state.schoolName,\n      // schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: \"\",\n      message: null,\n      classAdded: false\n      }\n    }\n\n\n    componentDidMount (){\n\n      console.log(\"Props on addTeacher mount: \", this.props )\n      console.log(\"state of addTeacher component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getusers`, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Users found: \", responseFromTheBackend.data.usersFound)\n        this.setState({ allUsers: responseFromTheBackend.data.usersFound });\n\n        })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n    }\n\n  \n    search = (e) =>{\n      \n      this.setState({searchTerm: e.target.value }, ()=>{\n  \n        let clone = [...this.state.allUsers];\n        \n        let filteredUsers = this.state.allUsers.filter((eachUser)=>{\n          console.log(\"eachUser is:\", eachUser)\n        return eachUser.fullName.toUpperCase().includes(this.state.searchTerm.toUpperCase())\n  \n      })\n          this.setState({visibleUsers: filteredUsers})\n      })\n    }\n\n    addTeacher(teacherItem){\n      \n      console.log(\"item passed to addTeacher function: \", teacherItem)\n      \n      this.setState({ teacher: {\n            teacherName: teacherItem.fullName, \n            teacherId: teacherItem._id\n          }\n        }, () => {\n            console.log(\"State after post, teacher and id added:\", this.state);\n          \n\n            axios.put(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, this.state.teacher, { withCredentials: true })\n            .then( responseForUpdateClass => {\n              console.log(\"Class updated in ClassBox: \", responseForUpdateClass.data)\n            \n\n              axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n              .then( responseForGetClass => {\n              console.log(\"Updated Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ teacher: {\n              teacherName: responseForGetClass.data.classFound.teacher.teacherName, \n              teacherId: responseForGetClass.data.classFound.teacher.teacherId\n              }}, () => {\n              console.log(\"State after getting updated class:\", this.state);\n\n\n              const teacherDoc = responseForGetClass.data.classFound.teacher;\n              console.log(\"teacherDoc from addTeacher component:\", teacherDoc);\n              this.props.onTeacherChange(teacherDoc);\n\n              })\n\n            })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n\n\n\n            })\n            .catch(err => console.log(\"Err while updating class: \", err))\n          \n          \n          \n          \n          \n          \n          \n          \n          }) \n\n\n          \n\n\n    \n      \n      \n\n    }\n      \n    \n\n    showFoundUsers = () =>{\n\n      return this.state.visibleUsers.map((eachUser, i)=>{\n  \n        return( \n        \n        <div>  \n        <label>User: </label> {eachUser.fullName}\n\n        <button onClick={() => this.addTeacher(eachUser)}> Assign Teacher </button>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n   \n\n\n    render(){\n\n      return (\n        <div>\n\n        <h4 className=\"title\"> Assign Teacher</h4>\n        <label>Search for Teacher:</label><input onChange={this.search}\n         value={this.state.searchTerm}>\n        </input>\n\n         {this.state.visibleUsers && <div>\n\n          <h4>Found users:</h4> \n          {this.showFoundUsers()}\n         </div>}\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\n\nexport default class ClassBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: this.props.location.state.currentUser,\n      classId: this.props.location.state.classId,\n      className: this.props.location.state.className,\n      teacher: {\n        teacherName: this.props.location.state.teacherName,\n        teacherId: this.props.location.state.teacherId},\n      teacherAdded: false,\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: this.props.location.state.classCode,\n      creator: this.props.location.state.creator,\n      parents: this.props.location.state.parents,\n      showEditButton: false,\n      showEditForm: false\n\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassBox mount: \", this.props )\n      console.log(\"State of ClassBox component on mount: \", this.state)\n\n      if (this.state.currentUser.role == \"Admin\" || this.state.currentUser.role == \"Teacher\") {\n        this.setState({showEditButton:true}, () => {console.log(\"State after edit form condition:\", this.state)}\n          )\n        }\n\n    }\n\n  \n    syncCurrentTeacher(teacherData){\n      console.log(\"Teacher data passed to synccurrentteacher\", teacherData)\n      this.setState({ teacher: {teacherName: teacherData.teacherName, teacherId: teacherData.teacherId}  })\n    }\n  \n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h3>Class Name: </h3> \n            <h4>{this.state.className}</h4>\n          </div>\n                \n          <div>\n            <label>Class Code: </label> \n              {this.state.classCode}\n          </div>\n                \n        <div>\n                  \n          <label>Class Teacher: </label> \n\n          {/* If no teacher is assigned, and user is Admin or Teacher, allow view of assign teacher */}\n          {!this.state.teacher.teacherName && <div> {!this.state.teacher.teacherName} \n           No Teacher Assigned \n                  \n           {this.state.showEditButton && <div>\n            <AddTeacher\n            onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n           \n            </div>}\n\n          {/* If teacher is assigned, show their name.  */}\n            {this.state.teacher.teacherName}\n        \n         </div>\n\n         <div>\n            <label>Parents: </label> \n              {this.state.parents}\n          </div>\n\n        <div>\n\n          {/* If teacher is assigned anduser is Admin or Teacher, allow these components to be seen */}\n          {this.state.showEditButton && <div>\n            \n            <button onClick={this.toggleEditForm}>Edit Class</button>\n            \n            {this.state.showEditForm && <div>\n            <AddTeacher onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n            \n            </div>} \n\n        </div>\n\n                \n                      \n\n\n      </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class NewClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      className: \"\",\n      teacher: {teacherName: null,\n      teacherId: null},\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null,\n      classAdded: false\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"This is a new class\");\n      console.log(\"School props: \", this.props.location.state)\n    }\n\n\n    genericSync(event){\n      console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n      event.preventDefault();\n      console.log(\"Form submitted. State is:\", this.state);\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/setup/class`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n            let newClassId = responseFromServer.data.newClass._id\n\n            axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+newClassId, { withCredentials: true })\n            .then( responseForGetClass => {\n              console.log(\"Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ classId: responseForGetClass.data.classFound._id, classCode: responseForGetClass.data.classFound.classCode, classAdded: true, \n              creator: responseForGetClass.data.classFound.creator }, \n              () => {\n                console.log(\"State after post, class added and creator assigned:\", this.state)\n            });\n\n              })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n        })\n        .catch( err => console.log(\"Err in class setup: \", err));\n  }\n\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n\n    render(){\n\n\n      return (\n        <div>\n\n         <h1>CREATE A NEW CLASS</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"className\"\n                        placeholder=\"Mr. Smith's Homeroom \"\n                    />\n\n                    <button> Create Class </button>\n              </form>\n\n              {this.state.classAdded && <div><h3> You created a new class: </h3>\n                  \n                <ClassBox \n                  classId ={this.state.classId}\n                  className = {this.state.className}\n                  classCode = {this.state.classCode}\n                  teacherName = {this.state.teacher.teacherName}\n                  teacherId = {this.state.teacher.teacherId}\n                  schoolName = {this.state.schoolName}\n                  schoolId = {this.state.schoolId}\n                  creator = {this.state.creator}\n                  parents = {this.state.parents}\n                  />\n                  \n                </div>}\n                  \n                  \n                        \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        </div>    \n        // end of containing div\n\n      )\n\n    }\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport NewClass from \"../setup/NewClass\"\n\n\n\nexport default class NewSchool extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role\n        },\n      schoolName: \"\",\n      address: \"\",\n      city:\"\",\n      state: \"\",\n      zip: \"\",\n      role: \"Admin\",\n      image: \"\",\n      message: null,\n      schoolAdded: false,\n      schoolId: \"\",\n      creator: this.props.location.state.currentUser.userId\n    }\n  }\n  \n  \n  componentDidMount(){\n    console.log(\"State upon mount - New school component: \", this.state)\n    console.log(\"props on NewSchool mount: \", this.props)\n    const userRole = this.state.currentUser.role\n\n    axios.put(\n      // route we are hitting in the backend\n      `${process.env.REACT_APP_API_URL}/setup/role`,\n      // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n      this.state.currentUser,\n      // secure sending\n      { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"Response from server after role post is:\", responseFromServer.data);\n    \n        axios.get(`${process.env.REACT_APP_API_URL}/setup/role`+this.props.location.state.currentUser.userId, { withCredentials: true })\n        .then( responseFromTheBackend => {\n          console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n          this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n            console.log(\"State after role assigned:\", this.state)}\n            );\n  \n          })\n        .catch(err => console.log(\"Err while searching for teacher: \", err))\n    \n    })\n    .catch( err => console.log(\"Err in role setup: \", err)); \n    \n  }\n\n\n  \n  showAddedSchool(){\n    \n    if (this.state.schoolAdded)\n    \n    return(\n      \n      <div>\n\n          <h3>The School has been added: {this.state.schoolName}</h3>\n          <h4>School Address: {this.state.address}</h4>\n          {this.state.city}\n          {this.state.state}\n          {this.state.zip}\n\n        <div>\n        <Link to={{\n          pathname: \"/setup/class\",\n          state: {\n          schoolId: this.state.schoolId,\n          schoolName: this.state.schoolName\n          }\n          }}>Add Classes</Link>\n\n        </div>   \n          \n          </div>\n        )\n        \n      }\n      \n      \n      genericSync(event){\n        // console.log(\"The event.target is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n        console.log(\"The state while changing:\", this.state)\n      }\n      \n      handleSubmit (event){\n        \n        event.preventDefault();\n        this.setState({ schoolAdded: true });\n        \n        axios.post(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/school`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n          )\n          .then( responseFromServer => {\n            console.log(\"Response from server after post is:\", responseFromServer.data);\n            \n            // if(responseFromServer.data) return this.setState({ message: responseFromServer.data.message })\n            this.setState({ schoolId: responseFromServer.data.school._id });\n            \n            console.log(\"Form submitted. The state is:\", this.state);\n          })\n          .catch( err => {\n            // console.log(\"Err in school setup: \", err)\n            if(err.data) return this.setState({ message: err.data.message }) \n          })\n          \n          \n        }\n        \n        \n      render(){\n          \n        return (\n        <div>\n\n         <h1>PLEASE CREATE A NEW SCHOOL</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> School Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"schoolName\"\n                        placeholder=\"MyChalkboard Academy\"\n                    />\n\n                    <label> Address: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"address\"\n                        placeholder=\"12345 Main Drive\"\n                    />\n\n                    <label> City: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <label> State: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"state\"\n                        placeholder=\"FL\"\n                    />\n\n                    <label> Zip: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"zip\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <button> Create School </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.schoolAdded && <div> { this.state.message } </div> }\n          \n            \n            {this.showAddedSchool()}\n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport NewSchool from \"../setup/NewSchool\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class SchoolList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser.userId,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n        },\n      schoolId: \"\",\n      allSchools: null,\n      visibleSchools: null,\n      message: null\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on SchoolList mount: \", this.props )\n      console.log(\"State of SchoolList component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getschools/`+this.props.currentUser._id, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Schools found: \", responseFromTheBackend.data.schoolsFound)\n        this.setState({ allSchools: responseFromTheBackend.data.schoolsFound }, () => {\n          console.log(\"State after schools Found:\", this.state)}\n          );\n\n        })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n    }\n\n\n    showFoundSchools = () =>{\n\n\n      return this.state.allSchools.map((eachSchool, index)=>{\n  \n      \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>School: </label> {eachSchool.schoolName}\n        \n        \n        </div>\n        <div>\n        <label>School Address: </label> {eachSchool.address}, {eachSchool.city}, {eachSchool.state}\n        </div>\n        <div>\n\n          <ul> \n          <Link to={{\n            pathname: `/school/details/`+eachSchool._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Edit School </Link>\n          </ul>\n          \n          <ul>\n\n          <Link to={{\n            pathname: `/setup/class`,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Add class </Link>\n          </ul>\n\n        \n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h4>YOUR SCHOOLS COMPONENT </h4> \n            \n          </div>\n\n        {!this.state.allSchools || this.state.allSchools.length == 0 && <div>\n\n        <h3>Add School to get started</h3>\n\n        <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Add School </Link>\n\n        </div>}\n\n\n         {this.state.allSchools && <div> {this.showFoundSchools()} </div>}    \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport ClassBox from \"./ClassBox\"\n\n\nexport default class ClassList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      allClasses: null,\n      visibleClasses: null,\n      message: null\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassList mount: \", this.props )\n      console.log(\"State of ClassList component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getclasses/`+this.props.currentUser._id, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Classes found: \", responseFromTheBackend.data.classesFound)\n        this.setState({ allClasses: responseFromTheBackend.data.classesFound }, () => {\n          console.log(\"State after classes Found:\", this.state)}\n          );\n\n        })\n      .catch(err => console.log(\"Err while searching for classes: \", err))\n    }\n\n\n    showFoundClasses = () =>{\n\n      console.log(\"show found classes function\")\n      \n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>Class: </label> {eachClass.className}\n        </div>\n        <div>\n        <label>Teacher: </label> {eachClass.teacher.teacherName}\n        </div>\n        <div>\n\n           {/* /class/details/:classlId */}\n\n           <ul> \n            <Link to={{\n            pathname: `/class/details/`+eachClass._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n                classId: eachClass._id,\n                className: eachClass.className,\n                classCode: eachClass.classCode,\n                teacherName: eachClass.teacher.teacherName,\n                teacherId: eachClass.teacher.teacherId,\n                schoolName: eachClass.schoolName,\n                schoolId: eachClass.schoolId,\n                creator: eachClass.creator,\n                parents: eachClass.parents\n             }\n           }}> View Class </Link>\n          </ul>\n\n\n\n\n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h4>YOUR CLASSES COMPONENT </h4> \n            \n          </div>\n\n          {!this.state.allClasses || this.state.allClasses.length == 0 && <div>\n\n          <h3>Add a Class to a School to get Started</h3>\n\n          \n          </div>}\n\n\n         {this.state.allClasses && <div> {this.showFoundClasses()} </div>}    \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\n\nexport default class AdminLanding extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on AdminLanding mount: \", this.props )\n      console.log(\"State of AdminLanding component on mount: \", this.state)\n\n      \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h2> ADMIN LANDING PAGE </h2> \n\n\n          <div className=\"schoollist\">\n            <SchoolList\n            currentUser={this.props.currentUser}\n            ></SchoolList>\n          </div>\n\n          <div className=\"classlist\">\n            <ClassList\n            currentUser={this.props.currentUser}\n            ></ClassList>\n          </div>\n\n\n          </div>\n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport Setup from \"../setup/Setup\"\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport AdminLanding from \"./AdminLanding\"\n\nexport default class Landing extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on Landing mount: \", this.props )\n      console.log(\"State of Landing component on mount: \", this.state)\n\n      \n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n        \n          <h2>YOUR LANDING PAGE </h2> \n\n\n          {this.props.currentUser && this.props.currentUser.role == \"Admin\" && \n          \n            <div>\n            <AdminLanding\n            currentUser={this.props.currentUser}\n            ></AdminLanding>\n            </div>\n          \n          }\n\n          {this.props.currentUser && this.props.currentUser.role == \"Teacher\" && \n           <div>\n             TEACHER LANDING \n           </div>\n\n          }\n\n\n          {this.props.currentUser && this.props.currentUser.role == \"Parent\" && \n           <div>\n             PARENT LANDING PAGE\n           </div>\n          } \n\n          {this.props.currentUser && this.props.currentUser.role == \"Unassigned\" && \n           <div>\n             Please complete setup\n\n             <Setup \n              currentUser = { this.props.currentUser } \n            />         \n            \n\n           </div>\n          } \n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport AdminLanding from \"../landing/AdminLanding\"\nimport Landing from \"../landing/Landing\"\n\n\n\nexport default class Login extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"\",\n            loggedIn: false,\n\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/login`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            // console.log(\"response is:\", responseFromServer);\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            alert(\"You are logged in.\")\n            this.setState({ loggedIn: true });\n\n            // axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+newClassId, { withCredentials: true })\n            // .then( responseForGetClass => {\n            //   console.log(\"Class found: \", responseForGetClass.data)\n              \n\n            //   this.setState({ classId: responseForGetClass.data.classFound._id, classCode: responseForGetClass.data.classFound.classCode, classAdded: true, \n            //   creator: responseForGetClass.data.classFound.creator }, \n            //   () => {\n            //     console.log(\"State after post, class added and creator assigned:\", this.state)\n            // });\n\n            //   })\n            // .catch(err => console.log(\"Err while searching for class: \", err))\n\n\n\n        })\n        .catch( err => {\n            // console.log(\"err: \", err.response)\n            if(err.response.data) return this.setState({ message: err.response.data.message })\n        });\n    }\n\n\n\n    render(){\n        \n        const { fullName, email, password } = this.state;\n\n        return (\n\n            <div>\n\n            {!this.state.loggedIn &&\n            <section>\n                <h2> Login </h2>\n                <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                    <button> Login </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            </section>\n            }\n\n            {this.state.loggedIn && \n            \n            <Landing\n            currentUser = {this.props.currentUser}\n            />\n            \n            }\n\n            </div>\n\n        )\n    }\n}","import React from \"react\";\n\n\nexport default class Home extends React.Component {\n\n    render(){\n        return (\n            <section>\n                <h1> Home Page </h1>\n                <p> Welcome to the best app ever! ❤️ </p>\n            </section>\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\n\nexport default class Account extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: this.props.currentUser.fullName,\n            email: this.props.currentUser.email,\n            password: this.props.currentUser.fullName,\n            message: null,\n            role: this.props.currentUser.role\n        }\n    }\n\n    componentDidMount() {\n      \n    }\n\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    updateName (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/account/name/`+this.props.currentUser._id,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.props.currentUser._id, { withCredentials: true })\n          .then( userDataFromServer => {\n            console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n            \n    \n            })\n          .catch(err => console.log(\"Err while searching for user: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n\n    updateEmail (event){\n      // console.log(\"submitting form\");\n      event.preventDefault();\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/account/email/`+this.props.currentUser._id,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          \n        \n        axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.props.currentUser._id, { withCredentials: true })\n        .then( userDataFromServer => {\n          console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n          \n  \n          })\n        .catch(err => console.log(\"Err while searching for user: \", err))\n          \n      })\n      .catch( err => console.log(\"Err in signup: \", err));\n  }\n\n\n  updatePassword (event){\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/account/password/`+this.props.currentUser._id,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        this.state,\n        // secure sending\n        { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        \n      \n      axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.props.currentUser._id, { withCredentials: true })\n      .then( userDataFromServer => {\n        console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n        \n\n        })\n      .catch(err => console.log(\"Err while searching for user: \", err))\n        \n    })\n    .catch( err => console.log(\"Err in update password: \", err));\n}\n\n\n\n\n\n    render(){\n      \n      return (\n        <section>\n            <h2> {this.state.fullName} </h2>\n            \n            <form onSubmit = {event => this.updateName(event)} >                    \n              <label> User Name: </label>\n              <input\n                  value={this.state.fullName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder={this.state.fullName}\n              />\n              <button> Save </button>\n            </form>\n\n            <form onSubmit = {event => this.updateEmail(event)}>           \n                <label> Email: </label>\n                <input\n                    value={this.state.email} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"email\"\n                    name=\"email\"\n                    placeholder={this.state.email}\n                />\n              <button> Save Email </button>\n            </form>\n\n            <form onSubmit = {event => this.updatePassword(event)}>\n                <label> Password</label>\n                <input\n                    value={this.state.password} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Your password\"\n                />\n                <button> Update Password </button>\n            </form>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n            { this.state.message && <div> { this.state.message } </div> }\n        \n        </section>\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport ClassBox from \"../class/ClassBox\"\n\nexport default class AddClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      class: [],\n      classCode: \"\",\n      message: null,\n      classCodeEntered: false\n      }\n    }\n\n\n    searchClasses = () =>{\n\n      return this.state.visibleClasses.map((eachClass, i)=>{\n  \n        return(\n          <ClassBox key={i} \n          className={eachClass.className}\n          classCode={eachClass.classCode}\n          theSchool={eachClass.schoolName}\n           />\n        )\n  \n      })\n  \n    }\n\n\n    genericSync(event){\n      console.log(\"Event Target Value: \", event.target.value)\n      // const { name, value } = event.target;\n      this.setState({ [event.target.name]: event.target.value });\n      console.log(\"The state is\", this.state)\n    }\n\n\n    handleSubmit (event){\n      console.log(\"Form submitted\");\n      event.preventDefault();\n\n      this.setState({ classCodeEntered: true });\n\n      const formClassCode = this.state.classCode\n      console.log(\"The state is\", this.state.classCode)\n\n      axios.get(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/class/code`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          formClassCode,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          console.log(\"Class found is:\", responseFromServer.data);\n          // const { classesDoc } = responseFromServer.data;\n\n          // this.setState({ class: classesDoc });\n          \n      })\n      .catch( err => {\n        console.log(\"Error while adding class: \", err)\n        this.setState({ message: err });\n        }\n      );\n  }\n\n\n    render(){\n\n      console.log(this.props)\n      return (\n        <div>\n\n         <h1>PLEASE ENTER YOUR CLASS CODE</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Code: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"classCode\"\n                        placeholder=\"123XYZ\"\n                    />\n        \n                    <button> Submit Class Code </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.classCodeEntered && <div> \n                \n                <h3>Classes Found:</h3>\n\n                <div>\n                  {this.state.class[0]}\n                </div>\n                  \n                    \n                </div> }\n          \n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n}  // end of Class","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class FindClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      className: \"\",\n      teacher: {teacherName: null,\n      teacherId: null},\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null,\n      classAdded: false\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Find class component\");\n      \n    }\n\n\n    genericSync(event){\n      console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n      event.preventDefault();\n      console.log(\"Form submitted. State is:\", this.state);\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/setup/class`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n            let newClassId = responseFromServer.data.newClass._id\n\n            axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+newClassId, { withCredentials: true })\n            .then( responseForGetClass => {\n              console.log(\"Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ classId: responseForGetClass.data.classFound._id, classCode: responseForGetClass.data.classFound.classCode, classAdded: true, \n              creator: responseForGetClass.data.classFound.creator }, \n              () => {\n                console.log(\"State after post, class added and creator assigned:\", this.state)\n            });\n\n              })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n\n\n\n\n        })\n        .catch( err => console.log(\"Err in class setup: \", err));\n  }\n\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n\n    render(){\n\n\n      return (\n        <div>\n\n          <div>\n\n          <h4 className=\"title\"> Find School or Class</h4>\n          <label>Search:</label><input onChange={this.search}\n          value={this.state.searchTerm}>\n          </input>\n\n          {this.state.visibleUsers && <div>\n\n            <h4>Found users:</h4> \n            {this.showFoundUsers()}\n          </div>}\n\n\n          </div>\n                \n                \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        </div>    \n        // end of containing div\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class SchoolBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      // currentUser: {\n      //   userId: this.props.location.state.currentUser.userId,\n      //   fullName: this.props.location.state.currentUser.fullName,\n      //   email: this.props.location.state.currentUser.email,\n      //   role: this.props.location.state.currentUser.role\n      //   },\n      schoolId: this.props.location.state.schoolId,\n      schoolName: this.props.location.state.schoolName,\n      address: this.props.location.state.address,\n      city: this.props.location.state.city,\n      state: this.props.location.state.state,\n      zip: this.props.location.state.zip,\n      showEditForm: false\n    }\n  }\n\n\n    componentDidMount(){\n      console.log(\"Props on SchoolBox mount: \", this.props )\n      console.log(\"State of SchoolBox component on mount: \", this.state)\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n  \n    updateSchool(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/school/update/`+this.state.schoolId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/schoolinfo/`+this.state.schoolId, { withCredentials: true })\n          .then( updatedSchool => {\n            console.log(\"School found after edit: \", updatedSchool.data.schoolFound)\n            \n\n            this.setState({ schoolName: updatedSchool.data.schoolFound.schoolName }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n\n\n    \n            })\n          .catch(err => console.log(\"Err while searching for school: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in school update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <h2> {this.state.schoolName} </h2>\n\n          <div>\n          <label>School Address: </label>{this.state.address}\n          </div>\n\n          <div>\n          <label>City: </label> {this.state.city}\n          </div>\n\n          <div>\n          <label>State: </label>{this.state.state}\n          </div>\n\n          <div>\n          <label>School Zip: </label>{this.state.zip}\n          </div>\n\n          <div>\n          <button onClick={this.toggleEditForm}>Edit School</button>  \n          </div>\n\n          {this.state.showEditForm && \n          <section>\n            <h2> Edit Details for {this.state.schoolName} </h2>\n            \n            <form onSubmit = {event => this.updateSchool(event)} >                    \n             \n              <label> School: </label>\n              <input\n                  value={this.state.schoolName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"schoolName\"\n                  placeholder={this.state.fullName}\n              />\n                        \n                <label> Address: </label>\n                <input\n                    value={this.state.address} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"address\"\n                    placeholder={this.state.address}\n                />\n\n                <label> City </label>\n                \n                <input\n                    value={this.state.city} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"city\"\n                    placeholder={this.state.city}\n                />\n\n                <input\n                    value={this.state.state} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"state\"\n                    placeholder={this.state.state}\n                />\n\n                <input\n                    value={this.state.zip} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"zip\"\n                    placeholder={this.state.zip}\n                />\n\n\n\n                <button> Update School Details </button>\n            </form>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n            { this.state.message && <div> { this.state.message } </div> }\n        \n        </section>}\n\n\n            \n      \n\n                  \n                \n                      \n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport Setup from \"./components/setup/Setup\";\n// import Logout from \"./components/user-pages/Logout\"\nimport Home from \"./components/Home\";\nimport Account from \"./components/user-pages/Account\"\nimport Role from \"./components/Home\";\nimport NewSchool from \"./components/setup/NewSchool\"\nimport NewClass from \"./components/setup/NewClass\"\nimport AddClass from \"./components/setup/AddClass\"\nimport FindClass from \"./components/setup/FindClass\"\nimport Landing from \"./components/landing/Landing\"\nimport SchoolBox from './components/school/SchoolBox';\nimport ClassBox from \"./components/class/ClassBox\"\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    \n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n    .then( responseFromTheBackend => {\n      console.log(\"User in APP.JS: \", responseFromTheBackend)\n      const { userDoc } = responseFromTheBackend.data;\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => console.log(\"Err while getting the user from the checkuser route: \", err))\n  }\n\n  syncCurrentUser(user){\n    this.setState({ currentUser: user }, () => {console.log(\"State after user set:\", this.state.currentUser)})\n  }\n\n\n  handleLogout(event){\n    console.log(\"Handling logout\");\n    event.preventDefault();\n\n    axios.delete(`${process.env.REACT_APP_API_URL}/logout`,\n        this.state,\n        // secure sending\n        { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"response is:\", responseFromServer.data, \"the props ----- \", this.props);\n        let userDoc = responseFromServer.data.userDoc;\n        // this.props.onUserChange(userDoc);\n        this.syncCurrentUser(userDoc);\n        alert(\"You are logged out.\")\n    })\n    .catch( err => {\n        console.log(\"err: \", err)\n        // if(err.response.data) return this.setState({ message: err.response.data.message })\n    });\n}\n\n\n\n\n  render (){   \n    // console.log(\"the state in APPJS: \", this.state);\n    return (\n      <div >\n        <header>\n          <nav>\n            <NavLink to=\"/\" > Home </NavLink>\n            {/* If no current user, signup will show. */}\n            { !this.state.currentUser && <NavLink to=\"/signup\"> Signup </NavLink> }\n            { !this.state.currentUser && <div> <NavLink to=\"/login\"> Login </NavLink> </div> }\n            \n            {/* If current user is signed in, Nav will show: */}\n            <div>\n            { this.state.currentUser && <Link to=\"/logout\" onClick ={ event => this.handleLogout(event)}> Logout </Link> }  \n            { this.state.currentUser && this.state.currentUser.role && <NavLink to=\"/landing\"> Landing </NavLink> }\n            { this.state.currentUser && this.state.currentUser.role && <NavLink to=\"/account\"> Account </NavLink> }\n            \n            </div>\n          </nav>\n        </header>\n        <Switch>\n        {/* this is example how we would render component normally */}\n        {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n          <Route exact path=\"/\" component={ Home }   /> \n\n          {/* if we have to pass some props down to a component,\n          we can't use a standard way of rendering using component={},\n          but instead we have to use render = {}  like in the example below */}\n          <Route exact path=\"/signup\" render = { () => \n            <Signup \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n\n          {<Route exact path=\"/login\" render = { () => \n            <Login \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}\n\n          <Route exact path=\"/account\" render = { () => \n            <Account \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n          \n          <Route exact path=\"/setup/admin\" component={ NewSchool }   /> \n          \n          <Route exact path= \"/setup/teacher\" render={props =>\n              <div>\n              <FindClass \n                currentUser = { this.state.currentUser }   />\n            </div>\n           }/> \n          \n          <Route exact path= \"/setup/parent\" component={ AddClass }/> \n          \n          <Route exact path=\"/setup/class\" component={NewClass}/>\n\n          {<Route exact path=\"/setup/admin\" render = { () => \n            <NewSchool\n              currentUser = { this.state.currentUser }   \n              // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}  \n\n          <Route exact path=\"/school/details/:schoolId\" component = {SchoolBox} /> \n        \n          <Route exact path=\"/class/details/:classlId\" component = {ClassBox} /> \n\n\n          {<Route exact path=\"/landing\" render = { () => \n            <Landing\n              currentUser = { this.state.currentUser }   \n              // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>}  \n\n          \n\n          \n\n        </Switch>\n          \n          {/* <CountriesList /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}