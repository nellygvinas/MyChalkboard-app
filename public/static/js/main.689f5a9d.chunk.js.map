{"version":3,"sources":["components/setup/Role.js","components/setup/Setup.js","components/user-pages/Signup.js","components/setup/AddTeacher.js","components/class/ClassBox.js","components/setup/NewClass.js","components/setup/NewSchool.js","components/school/SchoolList.js","components/class/ClassList.js","components/posts/Posting.js","components/files/File.js","components/landing/AdminLanding.js","components/landing/TeacherLanding.js","components/landing/Landing.js","components/user-pages/Login.js","components/Home.js","components/user-pages/Account.js","components/setup/AddClass.js","components/setup/FindClass.js","components/school/SchoolBox.js","components/class/ClassDetails.js","components/posts/PostDetails.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Setup","props","state","currentUser","userId","_id","fullName","email","role","classes","image","message","console","log","this","axios","put","process","withCredentials","then","responseFromServer","catch","err","setState","handleRole","id","to","pathname","Signup","password","event","target","name","value","preventDefault","post","userDoc","data","onUserChange","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","AddTeacher","search","e","searchTerm","allUsers","filteredUsers","filter","eachUser","toUpperCase","includes","visibleUsers","showFoundUsers","map","i","onClick","addTeacher","classId","teacher","teacherName","teacherId","classCode","creator","parents","classAdded","get","responseFromTheBackend","usersFound","teacherItem","responseForUpdateClass","responseForGetClass","classFound","teacherDoc","onTeacherChange","ClassBox","toggleEditForm","showEditForm","teacherAdded","schoolName","schoolId","showEditButton","teacherData","updatedClass","syncCurrentTeacher","updateClass","NewClass","location","newClassId","newClass","NewSchool","address","city","zip","schoolAdded","theUpdatedUser","school","showAddedSchool","SchoolList","showFoundSchools","allSchools","eachSchool","index","key","visibleSchools","schoolCount","needsSchool","schoolsFound","length","ClassList","showFoundClasses","allClasses","eachClass","showTeacherSchools","schools","push","visibleClasses","Posting","postId","creation","description","files","class","likes","comments","comment","allPostings","visiblePostings","postingsFound","posts","formData","FormData","numFiles","append","newPost","addedPost","thePost","update","$unshift","images","src","alt","postLiked","$push","eachPost","renderPostImages","addLike","showLikes","eachComment","submitPostForm","encType","htmlFor","selectChange","showClassesForPost","multiple","handleFiles","showPostings","File","fileId","fileLocation","allFiles","filesFound","theFiles","newFile","addedFile","theFile","file","title","width","height","eachFile","renderFiles","createDocument","for","showFiles","AdminLanding","activeTab","handleSelect","bind","selectedTab","Tabs","activeKey","onSelect","Tab","eventKey","TeacherLanding","Landing","classesFound","Login","loggedIn","response","Home","aria-label","Account","userDataFromServer","window","confirm","theDeletedUser","updateName","updateEmail","updatePassword","deleteAccount","AddClass","searchClasses","theSchool","classCodeEntered","FindClass","findClass","SchoolBox","updatedSchool","schoolFound","deletedSchoolId","deletedSchool","responseAfterClasses","foundClasses","deletedClasses","foundPosts","deletedPosts","deleteSchool","updateSchool","ClassDetails","PostDetails","postingFound","commentsArray","user","showComments","showPost","addComment","App","syncCurrentUser","delete","alert","style","handleLogout","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.689f5a9d.chunk.js","sourcesContent":["import React from \"react\";\n// import axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class Role extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password:\"\",\n      role: \"Unassigned\",\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value })\n    }\n\n    syncCurrentUSer(user){\n      this.setState({ currentUser: user })\n    }\n\n    handleSubmit (event){\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    } //end of handleSubmit\n\n\n    render(){\n\n\n      return (\n\n        <div>\n\n           <h2>ROLE COMPONENT </h2>\n                \n\n\n\n\n\n\n\n        </div>\n      )\n\n\n\n\n    }  \n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport Role from \"../setup/Role\";\n\n\nexport default class Setup extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser._id,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n      },\n      classes: \"\",\n      image: \"\",\n      message: null\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Setup component - Initial state upon mount\", this.state)\n    }\n\n    shouldComponentUpdate() {\n      \n\n    }\n\n\n    handleRole(){\n    \n      console.log(\"submitting handle role\");\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/role`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state.role,\n          // secure sending\n          { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            console.log(\"response is:\", responseFromServer);\n        })\n        .catch( err => console.log(\"Err in role setup: \", err)); \n\n    } //end of handleRole\n\n\n    assignAdmin() {\n      this.setState(({currentUser}) => ({currentUser: {\n        ...currentUser,\n        role: \"Admin\",\n      }}))\n    \n    console.log(\"State after assign Admin\", this.state.currentUser)\n    }\n\n    assignTeacher(){\n      this.setState({ role: \"Teacher\" })\n      console.log(\"This.state Role assigned as Teacher:\", this.state.role)\n      this.handleRole()\n    }\n\n    assignParent() {\n      this.setState({ role: \"Parent\" })\n      console.log(\"This.state Role assigned as Parent:\", this.state.role)\n      this.handleRole()\n    }\n\n\n\n\n    render(){\n\n      console.log(\"Do I have user props in Setup? This.props.currentUser: \", this.props.currentUser)\n\n      return (\n\n        <div id=\"setup\">\n\n           <h2> Welcome, {this.props.currentUser.fullName}! Please select your role: </h2>\n          \n\n          <div>\n           {/* <Link to= \"/setup/admin\" onClick={() => this.assignAdmin()}> Administrator </Link>\n          </div> */}\n\n          <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Administrator </Link>\n          </div>\n          \n          <div>\n          <Link to={{\n            pathname: '/setup/teacher',\n            state: {\n              currentUser: {\n                userId: this.state.currentUser.userId,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Teacher\"\n              }\n            }}\n            }> Teacher </Link>\n          </div>\n\n          <div>\n          <Link to={{\n            pathname: '/setup/parent',\n            state: {\n              currentUser: {\n                userId: this.state.currentUser.userId,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Parent\"\n              }\n            }}\n            }> Parent </Link>\n\n\n          </div>     \n           \n\n\n\n        </div>\n      )\n\n\n\n    }  \n\n} // end of Setup component\n\n","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\n\nexport default class Signup extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"Unassigned\",\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/signup`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            console.log(\"userDoc from delete user account:\", userDoc);\n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n    render(){\n        console.log(\"User props in Signup? This.props.currentUser: \", this.props.currentUser)\n        // console.log(\"The current user's role:\", this.props.currentUser[0])\n        // const userProps = {fullName: this.props.currentUser.fullName, email: this.props.currentUser.email, role: this.props.currentUser.role};\n        const { fullName, email, password, role } = this.state;\n        \n        \n        if(this.props.currentUser){\n            return(\n            \n            <div>\n\n            <Setup \n              currentUser = { this.props.currentUser } \n            />         \n            </div>\n            )\n        }\n\n        return (\n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n                \n                <form onSubmit = {event => this.handleSubmit(event) } >\n                <h2> Sign up </h2>\n                                        \n                    <div className=\"form-group\">    \n                    <label> Full name: </label>\n                    <input\n                        value={fullName} // this.state.fullName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"fullName\"\n                        className=\"form-control\"\n                        placeholder=\"Jane Doe\"\n                    />\n                    </div>\n\n                    <div className=\"form-group\">\n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n                    </div>\n\n                    <div className=\"form-group\">\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"***********\"\n                    />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-info\"> Sign Up </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            \n            </div>\n\n            </div>\n\n\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class AddTeacher extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      teacher: {teacherName: null,\n        teacherId: null},\n      allUsers: null,\n      visibleUsers: null,\n      searchTerm: \"\",\n      // schoolName: this.props.location.state.schoolName,\n      // schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: \"\",\n      message: null,\n      classAdded: false\n      }\n    }\n\n\n    componentDidMount (){\n\n      console.log(\"Props on addTeacher mount: \", this.props )\n      console.log(\"state of addTeacher component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getusers`, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Users found: \", responseFromTheBackend.data.usersFound)\n        this.setState({ allUsers: responseFromTheBackend.data.usersFound });\n\n        })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n    }\n\n  \n    search = (e) =>{\n      \n      this.setState({searchTerm: e.target.value }, ()=>{\n  \n        let clone = [...this.state.allUsers];\n        \n        let filteredUsers = this.state.allUsers.filter((eachUser)=>{\n          console.log(\"eachUser is:\", eachUser)\n        return eachUser.fullName.toUpperCase().includes(this.state.searchTerm.toUpperCase())\n  \n      })\n          this.setState({visibleUsers: filteredUsers})\n      })\n    }\n\n    addTeacher(teacherItem){\n      \n      console.log(\"item passed to addTeacher function: \", teacherItem)\n      \n      this.setState({ teacher: {\n            teacherName: teacherItem.fullName, \n            teacherId: teacherItem._id\n          }\n        }, () => {\n            console.log(\"State after post, teacher and id added:\", this.state);\n          \n\n            axios.put(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, this.state.teacher, { withCredentials: true })\n            .then( responseForUpdateClass => {\n              console.log(\"Class updated in ClassBox: \", responseForUpdateClass.data)\n            \n\n              axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n              .then( responseForGetClass => {\n              console.log(\"Updated Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ teacher: {\n              teacherName: responseForGetClass.data.classFound.teacher.teacherName, \n              teacherId: responseForGetClass.data.classFound.teacher.teacherId\n              }}, () => {\n              console.log(\"State after getting updated class:\", this.state);\n\n\n              const teacherDoc = responseForGetClass.data.classFound.teacher;\n              console.log(\"teacherDoc from addTeacher component:\", teacherDoc);\n              this.props.onTeacherChange(teacherDoc);\n\n              })\n\n            })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n\n\n\n            })\n            .catch(err => console.log(\"Err while updating class: \", err))\n          \n        \n          }) \n\n    }\n      \n    \n\n    showFoundUsers = () =>{\n\n      return this.state.visibleUsers.map((eachUser, i)=>{\n  \n        return( \n        \n        <div>  \n        <label>User: </label> {eachUser.fullName}\n\n        <button onClick={() => this.addTeacher(eachUser)}> Assign Teacher </button>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n   \n\n\n    render(){\n\n      return (\n        <div>\n\n        <h4 className=\"title\"> Assign Teacher</h4>\n        <label>Search for Teacher:</label><input onChange={this.search}\n         value={this.state.searchTerm}>\n        </input>\n\n         {this.state.visibleUsers && <div>\n\n          <h4>Found users:</h4> \n          {this.showFoundUsers()}\n         </div>}\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\n\nexport default class ClassBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      // currentUser: \"\",\n      // classId: \"\",\n      // className: \"\",\n      // teacher: \"\",      \n      //   teacherId: \"\",\n      // teacherAdded: \"\",\n      // schoolName: \"\",\n      // schoolId: \"\",\n      // classCode: \"\",\n      // creator: \"\",\n      // parents: \"\",\n      // showEditButton: \"\",\n      // showEditForm: \"\",\n\n      currentUser: this.props.currentUser,\n      classId: this.props.classId,\n      className: this.props.className,\n      teacher: {\n        teacherName: this.props.teacherName,\n        teacherId: this.props.teacherId},\n      teacherAdded: false,\n      schoolName: this.props.schoolName,\n      schoolId: this.props.schoolId,\n      classCode: this.props.classCode,\n      creator: this.props.creator,\n      parents: this.props.parents,\n      showEditButton: false,\n      showEditForm: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassBox mount: \", this.props )\n      console.log(\"State of ClassBox component on mount: \", this.state)\n\n      if (this.state.currentUser.role !== \"Parent\") {\n        this.setState({showEditButton:true}, () => {console.log(\"State after edit form condition:\", this.state)}\n          )\n        }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n  \n    syncCurrentTeacher(teacherData){\n      console.log(\"Teacher data passed to synccurrentteacher\", teacherData)\n      this.setState({ teacher: {teacherName: teacherData.teacherName, teacherId: teacherData.teacherId}  })\n    }\n  \n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n\n\n    updateClass(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/class/update/`+this.state.classId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n          .then( updatedClass => {\n            console.log(\"Class found after edit: \", updatedClass.data.classFound)\n            \n\n            this.setState({ className: updatedClass.data.classFound.className }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n    \n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in class update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h3>Class Name: </h3> \n            <h4>{this.state.className}</h4>\n          </div>\n                \n          <div>\n            <label>Class Code: </label> \n              {this.state.classCode}\n          </div>\n                \n        <div>\n                  \n          <label>Class Teacher: </label> \n\n          {/* If no teacher is assigned, and user is Admin or Teacher, allow view of assign teacher */}\n          {!this.state.teacher.teacherName && <div> {!this.state.teacher.teacherName} \n           No Teacher Assigned \n                  \n           {this.state.showEditButton && <div>\n            <AddTeacher\n            onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n           \n            </div>}\n\n          {/* If teacher is assigned, show their name.  */}\n            {this.state.teacher.teacherName}\n        \n         </div>\n\n         <div>\n            <label>Parents: </label> \n              {this.state.parents}\n          </div>\n\n        <div>\n\n          {/* If teacher is assigned and user is Admin or Teacher, allow these components to be seen */}\n          {this.state.teacher.teacherName && this.state.showEditButton && <div>\n            \n            <button onClick={this.toggleEditForm}>Edit Class</button>\n            \n            {this.state.showEditForm && <div>\n            \n            <form onSubmit = {event => this.updateClass(event)} >                    \n             \n             <h3>Edit Class Details</h3>\n\n             <label> Class Name: </label>\n             <input\n                 value={this.state.className} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"className\"\n                 placeholder={this.state.className}\n             />\n                       \n               <button> Update Name </button>\n\n           </form>\n            \n           <AddTeacher onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            \n            \n            \n            </div>} \n              {/* End of show form on showform state */}\n\n            </div>} \n\n        </div>\n\n                \n                      \n\n\n      </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class NewClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: this.props.location.state.currentUser,\n      classId: null,\n      className: \"\",\n      teacher: {teacherName: null,\n      teacherId: null},\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: null,\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null,\n      classAdded: false\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Props from new class component on mount: \", this.props)\n    }\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n    genericSync(event){\n      // console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n      event.preventDefault();\n      console.log(\"Form submitted. State is:\", this.state);\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/setup/class`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n            let newClassId = responseFromServer.data.newClass._id\n\n            axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+newClassId, { withCredentials: true })\n            .then( responseForGetClass => {\n              console.log(\"Class found: \", responseForGetClass.data)\n              \n\n              this.setState({ classId: responseForGetClass.data.classFound._id, classCode: responseForGetClass.data.classFound.classCode, \n              creator: responseForGetClass.data.classFound.creator }, \n              () => {\n                console.log(\"State after post, class added and creator assigned:\", this.state)\n              })\n\n              })\n            .catch(err => console.log(\"Err while searching for class: \", err))\n\n        })\n        .catch( err => console.log(\"Err in class setup: \", err));\n        \n        this.setState({ classAdded: true}, \n          () => {\n            console.log(\"State after post, class added and creator assigned:\", this.state)\n          })\n\n    }\n    // end of handle submit\n\n\n\n\n    render(){\n\n\n      return (\n        <div id=\"new-class\">\n\n         <h1>Create a new class</h1> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"className\"\n                        placeholder=\"Mr. Smith's Homeroom \"\n                    />\n\n                    <button> Create Class </button>\n              </form>\n\n              {this.state.classAdded && this.state.classId && <div><h3> You added: </h3>\n                  \n                <ClassBox \n                  currentUser = {this.props.location.state.currentUser}\n                  classId ={this.state.classId}\n                  className = {this.state.className}\n                  classCode = {this.state.classCode}\n                  teacherName = {this.state.teacher.teacherName}\n                  teacherId = {this.state.teacher.teacherId}\n                  schoolName = {this.state.schoolName}\n                  schoolId = {this.state.schoolId}\n                  creator = {this.state.creator}\n                  parents = {this.state.parents}\n                  />\n                  \n                </div>}\n                  \n                  \n                        \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        </div>    \n        // end of containing div\n\n      )\n\n    }\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport NewClass from \"../setup/NewClass\"\nimport Form from 'react-bootstrap/Form'\n\n\n\nexport default class NewSchool extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role\n        },\n      schoolName: \"\",\n      address: \"\",\n      city:\"\",\n      state: \"\",\n      zip: \"\",\n      role: \"Admin\",\n      image: \"\",\n      message: null,\n      schoolAdded: false,\n      schoolId: \"\",\n      creator: this.props.location.state.currentUser.userId\n    }\n  }\n  \n  \n  componentDidMount(){\n    console.log(\"State upon mount - New school component: \", this.state)\n    console.log(\"props on NewSchool mount: \", this.props)\n    const userRole = this.state.currentUser.role\n\n    axios.put(\n      // route we are hitting in the backend\n      `${process.env.REACT_APP_API_URL}/setup/role`,\n      // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n      this.state.currentUser,\n      // secure sending\n      { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"Response from server after role post is:\", responseFromServer.data);\n    \n        axios.get(`${process.env.REACT_APP_API_URL}/setup/role`+this.props.location.state.currentUser.userId, { withCredentials: true })\n        .then( responseFromTheBackend => {\n          console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n          this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n            console.log(\"State after role assigned:\", this.state)}\n            );\n  \n          })\n        .catch(err => console.log(\"Err while searching for teacher: \", err))\n    \n    })\n    .catch( err => console.log(\"Err in role setup: \", err)); \n    \n  }\n\n\n  \n  showAddedSchool(){\n    \n    if (this.state.schoolAdded)\n    \n    return(\n      \n      <div>\n\n          <h3>The School has been added: {this.state.schoolName}</h3>\n          <h4>School Address: {this.state.address}</h4>\n          {this.state.city},\n          {this.state.state},\n          {this.state.zip}\n\n        <div>\n        <Link to={{\n          pathname: \"/setup/class\",\n          state: {\n          currentUser: {\n            userId: this.props.location.state.currentUser.userId,\n            fullName: this.props.location.state.currentUser.fullName,\n            email: this.props.location.state.currentUser.email,\n            role: this.props.location.state.currentUser.role\n            },\n          schoolId: this.state.schoolId,\n          schoolName: this.state.schoolName\n          }\n          }}>Add Classes</Link>\n\n        </div>   \n          \n          </div>\n        )\n        \n      }\n      \n      \n      genericSync(event){\n        // console.log(\"The event.target is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n        // console.log(\"The state while changing:\", this.state)\n      }\n      \n      handleSubmit (event){\n        \n        event.preventDefault();\n        this.setState({ schoolAdded: true });\n        \n        axios.post(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/setup/school`,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n          )\n          .then( responseFromServer => {\n            console.log(\"Response from server after post is:\", responseFromServer.data);\n            \n            // if(responseFromServer.data) return this.setState({ message: responseFromServer.data.message })\n            this.setState({ schoolId: responseFromServer.data.school._id });\n            \n            console.log(\"Form submitted. The state is:\", this.state);\n          })\n          .catch( err => {\n            // console.log(\"Err in school setup: \", err)\n            if(err.data) return this.setState({ message: err.data.message }) \n          })\n          \n          \n        }\n        \n        \n      render(){\n          \n        return (\n        <div id=\"new-school\">\n\n         <h2>Please Create a new School</h2> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> School Name: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"schoolName\"\n                        placeholder=\"MyChalkboard Academy\"\n                    />\n\n                    <label> Address: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"address\"\n                        placeholder=\"12345 Main Drive\"\n                    />\n\n                    <label> City: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <label> State: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"state\"\n                        placeholder=\"FL\"\n                    />\n\n                    <label> Zip: </label>\n                    <input\n                        // value={address} // this.state.address\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"zip\"\n                        placeholder=\"Miami\"\n                    />\n\n                    <button> Create School </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.schoolAdded && <div> { this.state.message } </div> }\n          \n            \n            {this.showAddedSchool()}\n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\nimport NewSchool from \"../setup/NewSchool\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\n\nexport default class SchoolList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.currentUser.userId,\n        fullName: this.props.currentUser.fullName,\n        email: this.props.currentUser.email,\n        role: this.props.currentUser.role\n        },\n      schoolId: \"\",\n      allSchools: null,\n      visibleSchools: null,\n      message: null,\n      schoolCount: 0,\n      needsSchool: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on SchoolList mount: \", this.props )\n      console.log(\"State of SchoolList component on mount: \", this.state)\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getschools/`+this.props.currentUser._id, { withCredentials: true })\n      .then( responseFromTheBackend => {\n        \n        console.log(\"Schools found: \", responseFromTheBackend.data.schoolsFound)\n        this.setState({ allSchools: responseFromTheBackend.data.schoolsFound }, () => {\n          console.log(\"State after schools Found:\", this.state)}\n          );\n\n        // axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n        // .then( responseFromTheBackend => {\n        //   const { userDoc } = responseFromTheBackend.data;\n        //   this.props.onUserChange(userDoc);\n        //   console.log(\"userDoc from schoollist:\", userDoc);\n        // })\n        // .catch(err => {\n        //   this.setState({ redirect: true }, () => {console.log(\"State after user not found:\", this.state.currentUser)})\n        //   console.log(\"Err while getting the user from the checkuser route: \", err)})\n      \n      })\n      .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n\n      // {this.getSchoolCount()};\n\n    }\n\n\n    // shouldComponentUpdate(){\n\n    //   axios.get(`${process.env.REACT_APP_API_URL}/getschools/`+this.props.currentUser._id, { withCredentials: true })\n    //   .then( responseFromTheBackend => {\n    //     console.log(\"Schools found: \", responseFromTheBackend.data.schoolsFound)\n    //     this.setState({ allSchools: responseFromTheBackend.data.schoolsFound }, () => {\n    //       console.log(\"State after schools Found in should component update:\", this.state)}\n    //       );\n\n    //     })\n    //   .catch(err => console.log(\"Err while searching for teacher: \", err))\n\n\n    // }\n\n\n\n\n    showFoundSchools = () =>{\n\n\n      return this.state.allSchools.map((eachSchool, index)=>{\n  \n       \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>School: </label> {eachSchool.schoolName}\n        \n        \n        </div>\n        <div>\n        <label>Address: </label> {eachSchool.address}, {eachSchool.city}, {eachSchool.state}\n        </div>\n        <div>\n\n          <ul> \n          <Link to={{\n            pathname: `/school/details/`+eachSchool._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Edit School </Link>\n          </ul>\n          \n          <ul>\n\n          <Link to={{\n            pathname: `/setup/class`,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n              schoolId: eachSchool._id,\n              schoolName: eachSchool.schoolName,\n              address: eachSchool.address,\n              city: eachSchool.city,\n              state: eachSchool.state,\n              zip: eachSchool.zip\n             }\n           }}> Add class </Link>\n          </ul>\n\n        \n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n    checkIfTeacher(){\n      let schoolArrayLength = this.state.allSchools.length\n\n      if (schoolArrayLength < 1) {\n\n      } else {\n\n      }\n\n    }\n\n    getSchoolCount(){\n      \n      this.setState({schoolCount: this.state.allSchools.length})\n      \n      if (this.state.schoolCount < 1){\n        this.setState({needsSchool: true})\n      }\n    }\n\n\n    render(){\n\n\n  \n\n      return (\n        \n        <div>\n\n        <h4>Your Schools</h4>\n\n        {!this.state.allSchools && <div>\n\n        <h3>Add School to get started</h3>\n\n        <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Add School </Link>\n\n        </div>}\n\n\n         {this.state.allSchools && <div> {this.showFoundSchools()} \n         \n         <div>\n         <Link to={{\n            pathname: '/setup/admin',\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: \"Admin\"\n              }\n            }}\n            }> Add School </Link>\n         </div>\n         </div>}    \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\n// import axios from \"axios\";\nimport { \n  // Switch, Route, NavLink, \n  Link } from \"react-router-dom\";\n// import ClassBox from \"./ClassBox\"\n\n\nexport default class ClassList extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      allClasses: this.props.allClasses,\n      visibleClasses: null,\n      schools: [],\n      message: null,\n      showTeacherSchools: false,\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassList mount: \", this.props )\n      console.log(\"State of ClassList component on mount: \", this.state)\n\n      // axios.get(`${process.env.REACT_APP_API_URL}/getclasses/`+this.props.currentUser._id,{ withCredentials: true })\n      // .then( responseFromTheBackend => {\n      //   console.log(\"Classes found: \", responseFromTheBackend.data.classesFound)\n      //   this.setState({ allClasses: responseFromTheBackend.data.classesFound, showTeacherSchools: true }, () => {\n      //     console.log(\"State after classes Found:\", this.state)}\n      //     );\n\n      //   })\n      // .catch(err => console.log(\"Err while searching for classes: \", err))\n    }\n\n\n    showFoundClasses = () =>{\n\n      console.log(\"show found classes function\")\n      \n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>Class: </label> {eachClass.className}\n        </div>\n        <div>\n        <label>Teacher: </label> {eachClass.teacher.teacherName}\n        </div>\n        <div>\n\n           {/* /class/details/:classlId */}\n\n           <ul> \n            <Link to={{\n            pathname: `/class/details/`+eachClass._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n                classId: eachClass._id,\n                className: eachClass.className,\n                classCode: eachClass.classCode,\n                teacherName: eachClass.teacher.teacherName,\n                teacherId: eachClass.teacher.teacherId,\n                schoolName: eachClass.schoolName,\n                schoolId: eachClass.schoolId,\n                creator: eachClass.creator,\n                parents: eachClass.parents\n             }\n           }}> View Class </Link>\n          </ul>\n\n\n\n\n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n    showTeacherSchools = () =>{\n\n      console.log(\"show schools for teacher\")\n      \n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        this.state.schools.push(eachClass.schoolName)\n\n        return( \n        \n        <div key={index}>  \n        <div>\n        <label>School: </label> {eachClass.schoolName}\n        </div>\n\n        </div>  \n    \n        )\n  \n      })\n  \n    }\n\n\n\n\n\n    render(){\n\n\n\n      return (\n        \n        <div>\n\n          <div>\n          <h4>Your Classes </h4> \n            \n          </div>\n\n          {!this.state.allClasses || this.state.allClasses.length === 0 && <div>\n\n          <h3>Add a Class to a School to get Started</h3>\n\n          \n          </div>}\n\n\n         {this.state.allClasses && <div> {this.showFoundClasses()} </div>}    \n\n         {this.state.showTeacherSchools && <div>\n           \n           Classes for teacher\n           \n           {this.showTeacherSchools()}\n           \n           </div>}\n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport update from 'immutability-helper';\n\nexport default class Posting extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      postId: null,\n      creation: \"\",\n      description: \"\",\n      files: \"\",\n      class: \"\",\n      creator: \"\",\n      likes: [],\n      comments: [],\n      comment: \"\",\n      allPostings: [],\n      visiblePostings: null,\n      parents: [],\n      allClasses: this.props.allClasses,\n    }\n  }\n\n    componentDidMount(){\n\n      console.log(\"Props on Posting mount: \", this.props )\n      console.log(\"State of Posting component on mount: \", this.state)\n\n      return this.state.allClasses.map((eachClass, index)=>{\n\n          axios.get(`${process.env.REACT_APP_API_URL}/posting/`+eachClass._id, { withCredentials: true })\n          .then( postingsFound => {\n            \n            console.log(\"Postings found for class Id: \", postingsFound.data.posts)\n            \n            this.setState({ allPostings: [...postingsFound.data.posts] }, () => {\n\n              // ...this.state.allPostings, \n              console.log(\"State after get request for postings:\", this.state)}\n              );  \n\n            // this.setState({ myArray: [...this.state.myArray, ...[1,2,3] ] })\n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n\n       })\n\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=> {console.log(\"state after changes\", this.state)});\n    }\n\n    selectChange(event){\n      console.log(\"what is: \", event.target.value)\n      let value = event.target.value;\n      this.setState({ class: value }, ()=> {console.log(\"state after class selected\", this.state)});\n    }\n\n    handleFiles(event){\n      this.setState({\n        files: event.target.files,\n       }, ()=> {console.log(\"state after files uploaded\", this.state)})\n    }\n\n    submitPostForm(event){\n\n      event.preventDefault();\n      const formData = new FormData();\n      \n      for(let i = 0, numFiles = this.state.files.length; i < numFiles; i++) {\n      \n       formData.append('file', this.state.files[i])\n       }\n    \n      formData.append('creation', this.state.creation)\n      formData.append('description', this.state.description)\n      \n      axios.post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/`+this.state.class,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        formData,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"New post created: \", responseFromServer.data.newPost)\n         \n \n          axios.get(`${process.env.REACT_APP_API_URL}/landing/post/`+responseFromServer.data.newPost._id, { withCredentials: true })\n          .then( addedPost => {\n           \n            console.log(\"Post created is: \", addedPost.data.thePost)\n            \n\n            this.setState({ postId: addedPost.data.thePost._id }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n\n            this.setState({\n             allPostings: update(this.state.allPostings, {$unshift: [addedPost.data.thePost]}\n            )}, ()=> {console.log(\"update to postings: \", this.state)})\n\n              \n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n    }\n\n    renderPostImages(images){\n              \n      return images.map((image,index) => {\n        return  <div key={index}><img src={image} alt=\"\" className=\"img-responsive\" /><br/></div> \n     });\n\n    }\n\n\n    showLikes(post){\n              \n        return  <div>{post.likes.length} likes <br/></div> \n     \n    }\n\n    addLike(post, index){\n      \n      console.log(\"the post we are liking is: \", post)\n     \n      \n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/like/`+post,\n        this.props.currentUser,\n        // secure sending\n        {withCredentials: true}\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"post liked: \", responseFromServer.data.postLiked)\n\n         this.setState({\n          allPostings: update(this.state.allPostings, {[index]: {likes: {$push: [this.props.currentUser._id]}}}\n         )}, ()=> {console.log(\"update to postings: \", this.state)})\n        // this.setState({ allPostings:  }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n\n\n    }\n\n\n\n\n\n    showPostings(){\n      \n      return this.state.allPostings.map((eachPost, index)=>{\n  \n        return( \n\n        <div key={index}>\n          {eachPost.creator.fullName}\n          <br/>\n          {eachPost.class.className}\n          <br/>\n          {eachPost.creation}\n          <br/>\n          {this.renderPostImages(eachPost.files)}\n          <br/>\n          {eachPost.description}\n          <br/>\n          <button onClick={() => this.addLike(eachPost._id, index)}>Like this Post</button>\n          <br/>\n\n          {this.showLikes(eachPost, index)}\n\n          <Link to={{\n            pathname: `/post/details/`+eachPost._id,\n            state: {\n              currentUser: {\n                userId: this.props.currentUser._id,\n                fullName: this.props.currentUser.fullName,\n                email: this.props.currentUser.email,\n                role: this.props.currentUser.role\n              },\n                postId: eachPost._id,\n                creator: eachPost.creator.fullName,\n                class: eachPost.class.className,\n                files: eachPost.files,\n                description: eachPost.description,\n                likes: eachPost.likes,\n                comments: eachPost.comments\n             }\n           }}> Add Comment </Link>\n         \n          <br/>\n        </div>\n        )\n  \n      })\n\n    }\n\n    showClassesForPost(){\n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n          <option key={index} name=\"class\" value={eachClass._id}>{eachClass.className}</option>\n\n        )\n  \n      })\n    }\n\n\n    showComments(){\n\n      return this.state.comments.map((eachComment, index)=>{\n  \n        return( \n        \n         <div key={index}>\n           {eachComment.creator.fullName}\n\n         </div>  \n\n        )\n  \n      })\n\n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n          <h2> Story </h2> \n\n          Add a New Story\n          <br/>\n\n          <form onSubmit={event => this.submitPostForm(event)} id=\"postingform\" encType=\"multipart/form-data\">\n              \n              <label htmlFor=\"class\">Select class:</label>\n              <select onChange={event => this.selectChange(event)}>\n                <option name=\"class\" value=\" \">Select a Class</option>\n                {this.showClassesForPost()}\n              </select>\n              <br/>\n              \n              <label htmlFor=\"creation\">Post Date:</label>\n              \n              <input \n                type=\"date\" name=\"creation\" \n                placeholder=\"Date\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.creation} /> \n                \n              <br/>\n\n              <label htmlFor=\"description\">Caption:</label>\n              <input \n                type=\"text\" \n                name=\"description\" \n                placeholder=\"Subject\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.description} /> \n               \n              <br/>\n\n              <label htmlFor=\"files\">Select Images:</label>\n              <input type=\"file\" name=\"files\" multiple onChange = {event => this.handleFiles(event)} \n                />\n\n              <br/>\n\n              <button>Add Post</button>\n          </form>\n\n          <div>\n            <h4>Posts</h4>\n\n            {this.showPostings()}\n          </div>\n\n       </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import AddTeacher from \"../setup/AddTeacher\"\n// import SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\nimport Posting from \"../posts/Posting\"\nimport update from 'immutability-helper';\n\n\n\nexport default class File extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      creation: \"\",\n      parents: [],\n      name: \"\",\n      fileId: \"\",\n      fileLocation: \"\",\n      files: null,\n      allFiles: [],\n      allClasses: this.props.allClasses,\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on File component mount: \", this.props )\n      console.log(\"State of File component on mount: \", this.state)\n\n      return this.state.allClasses.map((eachClass, index)=>{\n\n        axios.get(`${process.env.REACT_APP_API_URL}/files/`+eachClass._id, { withCredentials: true })\n        .then( filesFound => {\n          \n          console.log(\"Files found for class Id: \", filesFound.data)\n          \n          this.setState({ allFiles: [...filesFound.data.theFiles ] }, () => {\n            console.log(\"State after updates:\", this.state)}\n            );  \n\n          // this.setState({ myArray: [...this.state.myArray, ...[1,2,3] ] })\n\n          })\n        .catch(err => console.log(\"Err while searching for class: \", err))\n\n     })\n      \n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=> {console.log(\"state after changes\", this.state)});\n    }\n\n    selectChange(event){\n      console.log(\"what is: \", event.target.value)\n      let value = event.target.value;\n      this.setState({ class: value }, ()=> {console.log(\"state after class selected\", this.state)});\n    }\n\n    handleFiles(event){\n      this.setState({\n        files: event.target.files,\n       }, ()=> {console.log(\"state after files uploaded\", this.state)})\n    }\n\n\n    createDocument(event){\n\n      event.preventDefault();\n      const formData = new FormData();\n      \n      for(let i = 0, numFiles = this.state.files.length; i < numFiles; i++) {\n      let file = this.state.files[i]   \n       formData.append('file', this.state.files[i])\n       }\n    \n      formData.append('creation', this.state.creation)\n      formData.append('description', this.state.description)\n      \n      axios.post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/file/`+this.state.class,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        formData,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"New file created: \", responseFromServer.data.newFile)\n         \n \n          axios.get(`${process.env.REACT_APP_API_URL}/landing/file/`+responseFromServer.data.newFile._id, { withCredentials: true })\n          .then( addedFile => {\n           \n            console.log(\"File created is: \", addedFile.data.theFile)\n            \n\n            this.setState({ fileId: addedFile.data.theFile._id }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n\n            this.setState({\n             allFiles: update(this.state.allFiles, {$unshift: [addedFile.data.theFile]}\n            )}, ()=> {console.log(\"update to postings: \", this.state)})\n\n              \n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n    }\n\n\n    renderFiles(files){\n              \n      return files.map((file,index) => {\n        return  <iframe key={index} title={index} src={file} width=\"33%\" height=\"100px\"/>\n    \n     });\n\n    }\n\n\n    showFiles(){\n      \n      return this.state.allFiles.map((eachFile, index)=>{\n  \n        return( \n\n        <div key={index}>\n          {eachFile.creator.fullName}\n          <br/>\n          {eachFile.class.className}\n          <br/>\n          {this.renderFiles(eachFile.files)}\n          <br/>\n          {eachFile.description}\n          <br/>\n         \n        </div>\n        )\n  \n      })\n\n    }\n\n\n\n    showClassesForPost(){\n      return this.state.allClasses.map((eachClass, index)=>{\n  \n        return( \n        \n          <option key={index} name=\"class\" value={eachClass._id}>{eachClass.className}</option>\n\n        )\n  \n      })\n    }\n\n\n    render(){\n\n      return (\n        \n        <div>\n\n          <div>\n          <h2> Class Documents </h2> \n          </div>\n\n\n          Add a New File\n          <br/>\n\n          <form onSubmit={event => this.createDocument(event)} id=\"documentform\" encType=\"multipart/form-data\">\n              \n              <label for=\"class\">Select class:</label>\n              <select onChange={event => this.selectChange(event)}>\n                <option name=\"class\" value=\" \">Select a Class</option>\n                {this.showClassesForPost()}\n              </select>\n              <br/>\n              \n              <label for=\"creation\">Date:</label>\n              <input \n                type=\"date\" name=\"creation\" \n                placeholder=\"Date\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.creation} /> \n                \n              <br/>\n\n              <label for=\"description\">Description:</label>\n              <input \n                type=\"text\" \n                name=\"description\" \n                placeholder=\"Subject\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.description} /> \n               \n              <br/>\n\n              <label for=\"files\">Select Files:</label>\n              <input type=\"file\" name=\"files\" multiple onChange = {event => this.handleFiles(event)} \n                />\n\n              <br/>\n\n              <button>Add File</button>\n          </form>\n\n          <div>\n            <h4>Files</h4>\n\n            <div>\n\n            {this.showFiles()}\n\n\n\n\n            </div>\n\n\n\n\n          </div>\n\n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Nav, NavLink, Link } from \"react-router-dom\";\n// import AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\nimport Posting from \"../posts/Posting\"\nimport File from \"../files/File\"\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nexport default class AdminLanding extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: this.props.allClasses,\n      activeTab: props.activeTab || 1\n    }\n    this.handleSelect = this.handleSelect.bind(this);\n   }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on AdminLanding mount: \", this.props )\n      console.log(\"State of AdminLanding component on mount: \", this.state)\n      \n    }\n\n    handleSelect(selectedTab) {\n      // The active tab must be set into the state so that\n      // the Tabs component knows about the change and re-renders.\n      this.setState({\n        activeTab: selectedTab\n      });\n    }\n   \n\n\n    render() {\n\n      return (\n        \n        <div className=\"page-landing\">\n\n          <div className=\"container side-bar\" id=\"sidebar\">\n          \n          <div className=\"row justify-content-start\">\n          <div className=\"col-sm align-self-center schoollist\">\n            <SchoolList\n            currentUser={this.props.currentUser}\n            allClasses={this.props.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></SchoolList>\n          </div>\n          </div>\n\n          <div className=\"row justify-content-start\">\n          <div className=\"col-sm align-self-center classlist\">\n            <ClassList\n            currentUser={this.props.currentUser}\n            allClasses={this.props.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></ClassList>\n          </div>\n          </div>\n\n          </div>\n\n          <div class =\"tab-container\">\n          <Tabs activeKey={this.state.activeTab} onSelect={this.handleSelect}>\n            <Tab eventKey={1} title=\"Story\">\n            <Posting activeTab={1}\n            allClasses={this.state.allClasses}\n            currentUser={this.props.currentUser}\n            // classId={this.props.classId} \n            />\n            </Tab>\n\n            <Tab eventKey={2} title=\"Files\">\n            <File activeTab={2}\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}>\n            </File>\n            </Tab>\n          </Tabs>\n          </div>\n        </div>\n\n      )\n      }\n\n    }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import AddTeacher from \"../setup/AddTeacher\"\n// import SchoolList from \"../school/SchoolList\"\nimport ClassList from \"../class/ClassList\"\nimport Posting from \"../posts/Posting\"\nimport File from \"../files/File\"\nimport Tabs from \"react-bootstrap/Tabs\"\nimport Tab from \"react-bootstrap/Tab\"\n\n\nexport default class TeacherLanding extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: this.props.allClasses,\n      activeTab: props.activeTab || 1\n    }\n      this.handleSelect = this.handleSelect.bind(this);\n    }\n  \n\n\n    componentDidMount(){\n\n      console.log(\"Props on TeacherLanding mount: \", this.props )\n      console.log(\"State of TeacherLanding component on mount: \", this.state)\n      \n    }\n\n    handleSelect(selectedTab) {\n      // The active tab must be set into the state so that\n      // the Tabs component knows about the change and re-renders.\n      this.setState({\n        activeTab: selectedTab\n      });\n    }\n\n\n    render(){\n\n      return (\n        \n        <div className=\"page-landing\">\n\n          \n        <div className=\"container side-bar\" id=\"sidebar\">\n          \n          <div className=\"row justify-content-start\">\n          <div className=\"col-sm align-self-center schoollist\">\n            <ClassList\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            ></ClassList>\n          </div>\n          </div>\n\n        </div>\n\n        <div class =\"tab-container\">\n          <Tabs activeKey={this.state.activeTab} onSelect={this.handleSelect}>\n            <Tab eventKey={1} title=\"Story\">\n            <Posting activeTab={1}\n            allClasses={this.state.allClasses}\n            currentUser={this.props.currentUser}\n            // classId={this.props.classId} \n            >\n            </Posting>\n            </Tab>\n\n          <Tab eventKey={2} title=\"Files\">\n            <File activeTab={2}\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}>\n            </File>\n          </Tab>\n          </Tabs>\n        </div>\n      </div>\n      )}\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport Setup from \"../setup/Setup\"\nimport AddTeacher from \"../setup/AddTeacher\"\nimport SchoolList from \"../school/SchoolList\"\nimport Login from \"../user-pages/Login\"\nimport AdminLanding from \"./AdminLanding\"\nimport TeacherLanding from \"./TeacherLanding\"\n\nexport default class Landing extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      classId: this.props.classId,\n      className: \"\",\n      teacher: {\n        teacherName: \"\",\n        teacherId: \"\"},\n      teacherAdded: false,\n      schoolName: \"\",\n      schoolId: \"\",\n      classCode: \"\",\n      creator: \"\",\n      parents: [],\n      allClasses: null,\n      currentUser: this.props.currentUser\n    }\n  }\n\n\n    componentDidMount(){\n\n      axios.get(`${process.env.REACT_APP_API_URL}/getclasses/`+this.props.currentUser._id,{ withCredentials: true })\n      .then( responseFromTheBackend => {\n        console.log(\"Classes found: \", responseFromTheBackend.data.classesFound)\n        this.setState({ allClasses: responseFromTheBackend.data.classesFound}, () => {\n          console.log(\"State after classes Found:\", this.state)}\n          );\n\n        })\n      .catch(err => console.log(\"Err while searching for classes: \", err))\n\n\n\n  \n    }\n\n\n    render(){\n\n      if (!this.state.allClasses)  {\n        return  <div/>\n      } \n\n      return (\n        \n        <div className=\"landing\">\n\n          {this.props.currentUser.role == \"Admin\" &&          \n            <AdminLanding\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            ></AdminLanding>\n          \n          }\n\n          {this.props.currentUser.role == \"Teacher\" && \n           \n             <TeacherLanding\n            currentUser={this.props.currentUser}\n            allClasses={this.state.allClasses}\n            ></TeacherLanding>\n\n          }\n\n\n          {this.props.currentUser.role == \"Parent\" && \n           <div className=\"page-landing\">\n             PARENT LANDING PAGE\n           </div>\n          } \n\n          {this.props.currentUser.role == \"Unassigned\" && \n           <div className=\"page-landing\">\n             Please complete setup\n             <Setup \n              currentUser = { this.props.currentUser } \n            />         \n           </div>} \n                \n\n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\nimport AdminLanding from \"../landing/AdminLanding\"\nimport Landing from \"../landing/Landing\"\n\n\n\nexport default class Login extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password:\"\",\n            message: null,\n            role: \"\",\n            loggedIn: false,\n\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/login`,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            \n            this.setState({ loggedIn: true }, ()=>{console.log(\"state after logged in from login comp: \", this.state)});\n\n        })\n        .catch( err => {\n            console.log(\"err: \", err.response.data)\n            // if(err.response.data) return this.setState({ message: err.response.data.message })\n        });\n    }\n\n\n\n    render(){\n        \n        const { fullName, email, password } = this.state;\n\n\n        return (\n\n            <div>\n\n            {!this.state.loggedIn &&\n            \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n\n            <section>\n                <form onSubmit ={ event => this.handleSubmit(event) } >\n               \n                <h2> Login </h2>\n                \n                <div className=\"form-group\">\n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                </div>\n\n                    <button type=\"submit\" className=\"btn btn-info\"> Login </button>\n                </form>\n            </section>\n\n            </div>\n            </div>\n            }\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            \n\n\n\n\n            {this.state.loggedIn && \n            \n            <Landing\n            currentUser = {this.props.currentUser}\n            />\n            \n            }\n\n            \n            </div>\n\n        )\n    }\n}","import React from \"react\";\n\n\nexport default class Home extends React.Component {\n\n    render(){\n        return (\n            <section>\n                <h1> Home Page </h1>\n                <p> Welcome to the best app ever! <span role=\"img\" aria-label=\"heart\">❤️</span> </p>\n            </section>\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport Setup from \"../setup/Setup\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\n// import { threadId } from \"worker_threads\";\nimport Home from \"../user-pages/Signup\"\nimport Login from \"../user-pages/Login\"\n\nexport default class Account extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userId: this.props.location.state.currentUser.userId, \n            fullName: this.props.location.state.currentUser.fullName,\n            email: this.props.location.state.currentUser.email,\n            password: \"\",\n            message: null,\n            role: this.props.location.state.currentUser.role\n        \n        }\n\n    }\n\n    componentDidMount() {\n      console.log(\"Props from Account component on mount: \", this.props)\n      console.log(\"State from Account component on mount: \", this.state)\n    }\n\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    updateName (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/account/name/`+this.state.userId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n          .then( userDataFromServer => {\n            console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n            \n    \n            })\n          .catch(err => console.log(\"Err while searching for user: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n\n    updateEmail (event){\n      // console.log(\"submitting form\");\n      event.preventDefault();\n\n      axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/account/email/`+this.state.userId,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          \n        \n        axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n        .then( userDataFromServer => {\n          console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n          \n  \n          })\n          .catch(err => console.log(\"Err while searching for user: \", err))\n          \n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n      }\n      \n      \n      updatePassword (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n        \n        axios.put(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/account/password/`+this.state.userId,\n          // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n          this.state,\n          // secure sending\n          { withCredentials: true }\n          )\n          .then( responseFromServer => {\n            \n            \n            axios.get(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n            .then( userDataFromServer => {\n              console.log(\"User found after edit: \", userDataFromServer.data.theUpdatedUser)\n              \n              \n            })\n            .catch(err => console.log(\"Err while searching for user: \", err))\n            \n          })\n          .catch( err => console.log(\"Err in update password: \", err));\n        }\n        \n        \n        deleteAccount(event){\n\n          window.confirm(\"Please confirm that you wish to delete your user Account before proceeding. All user data will be removed once submitted.\")\n          \n          event.preventDefault();\n          \n          axios.post(`${process.env.REACT_APP_API_URL}/account/`+this.state.userId, { withCredentials: true })\n          .then( responseFromServer => {\n          console.log(\"User deleted: \", responseFromServer.data.theDeletedUser)   \n\n          })\n          .catch( err => console.log(\"Err in delete: \", err)\n          )\n       }\n\n\n\n\n    render(){\n\n      console.log(\"this.props:\", this.props)\n      \n      return (\n        <div id=\"account\">\n\n            <h2> {this.state.fullName} </h2>\n            \n            <form onSubmit = {event => this.updateName(event)} >                    \n              <label> User Name: </label>\n              <input\n                  value={this.state.fullName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder={this.state.fullName}\n              />\n              <button> Save </button>\n            </form>\n\n            <form onSubmit = {event => this.updateEmail(event)}>           \n                <label> Email: </label>\n                <input\n                    value={this.state.email} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"email\"\n                    name=\"email\"\n                    placeholder={this.state.email}\n                />\n              <button> Save Email </button>\n            </form>\n\n            <form onSubmit = {event => this.updatePassword(event)}>\n                <label> Password</label>\n                <input\n                    value={this.state.password} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Your password\"\n                />\n                <button> Update Password </button>\n            </form>\n\n            <button onClick={event => this.deleteAccount(event)}>Delete Account</button>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n            { this.state.message && <div> { this.state.message } </div> } \n        \n        </div>\n\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport ClassBox from \"../class/ClassBox\"\n\nexport default class AddClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role,\n      },\n      classCode: \"\",\n      classFound: false,\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: null,\n        teacherId: null\n      },\n      schoolName: \"\",\n      schoolId: \"\",\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null\n    }\n   }\n\n\n   componentDidMount(){\n    console.log(\"Props - Find class component on mount: \", this.props);\n    console.log(\"state on find class component on mount:\", this.state)\n\n    axios.put(\n      // route we are hitting in the backend\n      `${process.env.REACT_APP_API_URL}/setup/role`,\n      // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n      this.state.currentUser,\n      // secure sending\n      { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"Response from server after role post is:\", responseFromServer.data);\n    \n        axios.get(`${process.env.REACT_APP_API_URL}/setup/role/`+this.state.currentUser.userId, { withCredentials: true })\n        .then( responseFromTheBackend => {\n          console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n          this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n            console.log(\"State after role assigned:\", this.state)}\n            );\n  \n          })\n        .catch(err => console.log(\"Err while searching for teacher: \", err))\n    \n    })\n    .catch( err => console.log(\"Err in role setup: \", err)); \n\n  }\n\n\n    searchClasses = () =>{\n\n      return this.state.visibleClasses.map((eachClass, i)=>{\n  \n        return(\n          <ClassBox key={i} \n          className={eachClass.className}\n          classCode={eachClass.classCode}\n          theSchool={eachClass.schoolName}\n           />\n        )\n  \n      })\n  \n    }\n\n\n    genericSync(event){\n      console.log(\"Event Target Value: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=>console.log(\"State while changing class code: \", this.state));\n      \n    }\n\n\n    handleSubmit (event){\n      console.log(\"Form submitted\");\n      event.preventDefault();\n\n      this.setState({ classCodeEntered: true }, ()=>console.log(\"code entered \", this.state));\n\n      axios.get(\n          // route we are hitting in the backend\n          `${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classCode,\n          // secure sending\n          { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          console.log(\"Class found is:\", responseFromServer.data);\n\n          // this.setState({ class: classesDoc });\n          \n      })\n      .catch( err => {\n        console.log(\"Error while adding class: \", err)\n        this.setState({ message: err });\n        }\n      );\n  }\n\n\n    render(){\n\n      console.log(this.props)\n      return (\n        <div id=\"add-class\">\n\n         <h2>Please Enter your Class Code</h2> \n\n              <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Class Code: </label>\n                    <input\n                        // value={schoolName} // this.state.schoolName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"classCode\"\n                        placeholder=\"123XYZ\"\n                    />\n        \n                    <button> Submit Class Code </button>\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n                { this.state.classCodeEntered && <div> \n                \n                <h3>Classes Found:</h3>\n\n                <div>\n                  \n                </div>\n                  \n                    \n                </div> }\n          \n\n\n        </div>\n\n\n      )\n\n    }\n\n\n\n\n\n\n\n}  // end of Class","import React from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"./AddTeacher\"\nimport ClassBox from \"../class/ClassBox\"\n\n\nexport default class FindClass extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName,\n        email: this.props.location.state.currentUser.email,\n        role: this.props.location.state.currentUser.role,\n      },\n      classCode: null,\n      classFound: false,\n      classId: \"\",\n      className: \"\",\n      teacher: {\n        teacherName: null,\n        teacherId: null\n      },\n      schoolName: \"\",\n      schoolId: \"\",\n      creator: \"\",\n      image: \"\",\n      parents: [],\n      message: null\n      }\n    }\n\n    componentDidMount(){\n      console.log(\"Props - Find class component on mount: \", this.props);\n      console.log(\"state on find class component on mount:\", this.state)\n\n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/setup/role`,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        this.state.currentUser,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n          console.log(\"Response from server after role post is:\", responseFromServer.data);\n      \n          axios.get(`${process.env.REACT_APP_API_URL}/setup/role/`+this.state.currentUser.userId, { withCredentials: true })\n          .then( responseFromTheBackend => {\n            console.log(\"User found after role assigned: \", responseFromTheBackend.data.theUpdatedUser)\n            this.setState({ currentUser: {role: responseFromTheBackend.data.theUpdatedUser }}, () => {\n              console.log(\"State after role assigned:\", this.state)}\n              );\n    \n            })\n          .catch(err => console.log(\"Err while searching for teacher: \", err))\n      \n      })\n      .catch( err => console.log(\"Err in role setup: \", err)); \n\n\n\n    }\n\n\n    genericSync(event){\n      console.log(\"The event.target is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=>console.log(\"State as changing: \", this.state));\n    }\n\n    findClass (event){\n      event.preventDefault();\n      event.target.value = \"\";\n\n      console.log(\"Form for findclass submitted. State is:\", this.state);\n\n        axios.get(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/classinfo/code/`+this.state.classCode,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n\n           \n              console.log(\"Class found: \", responseFromServer.data)\n              \n\n              this.setState({ \n                classCode: responseFromServer.data.classFound.classCode, \n                classFound: true,\n                classId: responseFromServer.data.classFound._id, \n                className: responseFromServer.data.classFound.className,\n                teacher: {\n                  teacherName: responseFromServer.data.classFound.teacher.teacherName,\n                  teacherId: responseFromServer.data.classFound.teacher.teacherId\n                },\n                schoolName: responseFromServer.data.classFound.schoolName,\n                schoolId: responseFromServer.data.classFound.schoolId,\n                creator: responseFromServer.data.classFound.creator,\n                image: \"\",\n                parents: responseFromServer.data.classFound.parents,\n                message: null\n              }, \n              () => {\n                console.log(\"State after class found:\", this.state)\n              })\n            })\n        .catch( err => console.log(\"Err in class find \", err));\n\n        \n        }\n\n\n\n    syncCurrentTeacher(teacherData){\n      this.setState({ teacher: teacherData })\n    }\n\n\n\n\n    render(){\n\n\n      return (\n        <div>\n\n  \n\n          <h4 className=\"title\"> Find Class</h4>\n          <label>Search by class code to add yourself as teacher.</label>\n          \n          <form onSubmit = {event => this.findClass(event)} >  \n\n            <input\n                //  value={this.state.classCode} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"classCode\"\n                 placeholder=\"Your class code\"\n             />\n\n\n          <button>Find class </button>\n          </form>\n\n          \n\n            <h4>Found class:</h4> \n           \n            {this.state.classFound && <div>\n\n              <ClassBox \n                  currentUser = {this.state.currentUser}\n                  classId ={this.state.classId}\n                  className = {this.state.className}\n                  classCode = {this.state.classCode}\n                  teacherName = {this.state.teacher.teacherName}\n                  teacherId = {this.state.teacher.teacherId}\n                  schoolName = {this.state.schoolName}\n                  schoolId = {this.state.schoolId}\n                  creator = {this.state.creator}\n                  parents = {this.state.parents}\n                  />\n                  \n              \n            </div>}\n\n          \n                \n                \n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n          \n\n\n        {/* end of containing div */}\n        \n        </div>    \n\n\n      )\n\n    }\n\n\n\n\n\n\n\n\n}","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\n\nexport default class SchoolBox extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      // currentUser: {\n      //   userId: this.props.location.state.currentUser.userId,\n      //   fullName: this.props.location.state.currentUser.fullName,\n      //   email: this.props.location.state.currentUser.email,\n      //   role: this.props.location.state.currentUser.role\n      //   },\n      schoolId: this.props.location.state.schoolId,\n      schoolName: this.props.location.state.schoolName,\n      address: this.props.location.state.address,\n      city: this.props.location.state.city,\n      state: this.props.location.state.state,\n      zip: this.props.location.state.zip,\n      showEditForm: false,\n      message: null\n    }\n  }\n\n\n    componentDidMount(){\n      console.log(\"Props on SchoolBox mount: \", this.props )\n      console.log(\"State of SchoolBox component on mount: \", this.state)\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n  \n    updateSchool(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/school/update/`+this.state.schoolId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/schoolinfo/`+this.state.schoolId, { withCredentials: true })\n          .then( updatedSchool => {\n            console.log(\"School found after edit: \", updatedSchool.data.schoolFound)\n            \n\n            this.setState({ schoolName: updatedSchool.data.schoolFound.schoolName }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n\n\n    \n            })\n          .catch(err => console.log(\"Err while searching for school: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in school update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n    deleteSchool(event){\n      \n      window.confirm(\"Please confirm that you wish to delete this school before proceeding. All school data and classes will be removed.\")\n      \n      event.preventDefault();\n      \n      axios.post(`${process.env.REACT_APP_API_URL}/school/delete/`+this.state.schoolId, { withCredentials: true })\n      .then( responseFromServer => {\n        \n        let deletedSchoolId = responseFromServer.data.deletedSchool._id\n        console.log(\"School deleted: \", responseFromServer.data.deletedSchool)   \n\n        this.setState({message: \"The school and all associated data have been removed.\"})\n\n\n        axios.post(`${process.env.REACT_APP_API_URL}/classes/delete/`+deletedSchoolId, { withCredentials: true })\n        .then( responseAfterClasses => {\n        \n          console.log(\"Classes found for school: \", responseAfterClasses.data.foundClasses)\n          console.log(\"Classes deleted: \", responseAfterClasses.data.deletedClasses)   \n\n         let classesArray = responseAfterClasses.data.foundClasses\n\n         return classesArray.map((eachClass, index)=>{\n              \n              return axios.post(`${process.env.REACT_APP_API_URL}/postings/delete/`+eachClass._id, { withCredentials: true })\n              .then( responseAfterClasses => {\n            \n              console.log(\"Postings found for deleted classes: \", responseAfterClasses.data.foundPosts)\n              console.log(\"Postings deleted: \", responseAfterClasses.data.deletedPosts)   \n  \n                })\n              .catch( err => console.log(\"Err in delete: \", err))\n\n              })\n\n              })\n              .catch( err => console.log(\"Err in delete: \", err))\n              })\n            .catch( err => console.log(\"Err in delete: \", err))\n\n   }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div id=\"schoolbox\">\n\n          <h2> {this.state.schoolName} </h2>\n\n          <div>\n          <label>School Address: </label>{this.state.address}\n          </div>\n\n          <div>\n          <label>City: </label> {this.state.city}\n          </div>\n\n          <div>\n          <label>State: </label>{this.state.state}\n          </div>\n\n          <div>\n          <label>School Zip: </label>{this.state.zip}\n          </div>\n\n          <div>\n          <button onClick={this.toggleEditForm}>Edit School</button>  \n          </div>\n\n          <div>\n          <button onClick={event => this.deleteSchool(event)}>Delete School</button>\n          </div>\n\n          {this.state.showEditForm && \n          <section>\n            <h2> Edit Details for {this.state.schoolName} </h2>\n            \n            <form onSubmit = {event => this.updateSchool(event)} >                    \n             \n              <label> School: </label>\n              <input\n                  value={this.state.schoolName} // this.state.fullName\n                  onChange = { event => this.genericSync(event) } \n                  type=\"text\"\n                  name=\"schoolName\"\n                  placeholder={this.state.fullName}\n              />\n                        \n                <label> Address: </label>\n                <input\n                    value={this.state.address} // this.state.email\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"address\"\n                    placeholder={this.state.address}\n                />\n\n                <label> City </label>\n                \n                <input\n                    value={this.state.city} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"city\"\n                    placeholder={this.state.city}\n                />\n\n                <input\n                    value={this.state.state} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"state\"\n                    placeholder={this.state.state}\n                />\n\n                <input\n                    value={this.state.zip} // this.state.password\n                    onChange = { event => this.genericSync(event) } \n                    type=\"text\"\n                    name=\"zip\"\n                    placeholder={this.state.zip}\n                />\n\n                <button> Update School Details </button>\n            </form>\n\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n        \n        </section>}\n\n            { this.state.message && <div> { this.state.message } </div> }\n\n            \n      \n\n                  \n                \n                      \n\n\n        </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport AddTeacher from \"../setup/AddTeacher\"\n\nexport default class ClassDetails extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: this.props.location.state.currentUser,\n      classId: this.props.location.state.classId,\n      className: this.props.location.state.className,\n      teacher: {\n        teacherName: this.props.location.state.teacherName,\n        teacherId: this.props.location.state.teacherId},\n      teacherAdded: false,\n      schoolName: this.props.location.state.schoolName,\n      schoolId: this.props.location.state.schoolId,\n      classCode: this.props.location.state.classCode,\n      creator: this.props.location.state.creator,\n      parents: this.props.location.state.parents,\n      showEditButton: false,\n      showEditForm: false\n    }\n  }\n\n\n    componentDidMount(){\n\n      console.log(\"Props on ClassDetails mount: \", this.props )\n      console.log(\"State of ClassDetails component on mount: \", this.state)\n\n      if (this.state.currentUser.role === \"Admin\" || this.state.currentUser.role === \"Teacher\") {\n        this.setState({showEditButton:true}, () => {console.log(\"State after edit form condition:\", this.state)}\n          )\n        }\n    }\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n    }\n\n  \n    syncCurrentTeacher(teacherData){\n      console.log(\"Teacher data passed to synccurrentteacher\", teacherData)\n      this.setState({ teacher: {teacherName: teacherData.teacherName, teacherId: teacherData.teacherId}  })\n    }\n  \n\n    toggleEditForm = () =>{\n      this.setState({showEditForm: !this.state.showEditForm})\n    }\n\n\n    updateClass(event){\n\n      event.preventDefault();\n\n        axios.put(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/class/update/`+this.state.classId,\n            // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            \n          \n          axios.get(`${process.env.REACT_APP_API_URL}/classinfo/`+this.state.classId, { withCredentials: true })\n          .then( updatedClass => {\n            console.log(\"Class found after edit: \", updatedClass.data.classFound)\n            \n\n            this.setState({ className: updatedClass.data.classFound.className }, () => {\n              console.log(\"State after updates:\", this.state)}\n              );  \n    \n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n        })\n        .catch( err => console.log(\"Err in class update: \", err));\n\n        this.toggleEditForm()\n    }\n\n\n\n\n\n    render(){\n\n      return (\n        \n        <div id=\"class-details\">\n\n          <div>\n          <h3>Class Name: </h3><span>  </span>  \n            <h4>{this.state.className}</h4>\n          </div>\n                \n          <div>\n            <label>Class Code: </label><span>  </span> \n              {this.state.classCode}\n          </div>\n                \n        <div>\n                  \n          <label>Class Teacher: </label> \n\n          {/* If no teacher is assigned, and user is Admin or Teacher, allow view of assign teacher */}\n          {!this.state.teacher.teacherName && <div> {!this.state.teacher.teacherName} \n           <p>No Teacher Assigned </p>\n                  \n           {this.state.showEditButton && <div>\n            <AddTeacher\n            onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            </div>}\n           \n            </div>}\n\n          {/* If teacher is assigned, show their name.  */}\n            {this.state.teacher.teacherName}\n        \n         </div>\n\n         <div>\n            <label>Parents: </label> \n              {this.state.parents}\n          </div>\n\n        <div>\n\n          {/* If teacher is assigned anduser is Admin or Teacher, allow these components to be seen */}\n          {this.state.teacher.teacherName && this.state.showEditButton && <div>\n            \n            <button onClick={this.toggleEditForm}>Edit Class</button>\n            \n            {this.state.showEditForm && <div>\n            \n            <form onSubmit = {event => this.updateClass(event)} >                    \n             \n             <h3>Edit Class Details</h3>\n\n             <label> Class Name: </label>\n             <input\n                 value={this.state.className} // this.state.fullName\n                 onChange = { event => this.genericSync(event) } \n                 type=\"text\"\n                 name=\"className\"\n                 placeholder={this.state.className}\n             />\n                       \n               <button> Update Name </button>\n\n           </form>\n            \n           <AddTeacher onTeacherChange = { teacherDoc => this.syncCurrentTeacher(teacherDoc) }\n            classId = {this.state.classId}/>\n            \n            \n            \n            </div>} \n              {/* End of show form on showform state */}\n\n            </div>} \n\n        </div>\n\n                \n                      \n\n\n      </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Link } from \"react-router-dom\";\nimport update from 'immutability-helper';\n\nexport default class PostDetails extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: {\n        userId: this.props.location.state.currentUser.userId,\n        fullName: this.props.location.state.currentUser.fullName\n        },\n      postId: this.props.location.state.postId,\n      creation: this.props.location.state.creation,\n      description: this.props.location.state.description,\n      files: [this.props.location.state.files],\n      class: this.props.location.state.class,\n      creator: this.props.location.state.creator,\n      likes: [this.props.location.state.likes],\n      comments: this.props.location.state.comments,\n      comment: \"\",\n      // allClasses: this.props.allClasses,\n    }\n  }\n\n    componentDidMount(){\n\n      console.log(\"Props on Post Detail mount: \", this.props )\n      console.log(\"State of Post Detail component on mount: \", this.state)\n\n     \n          axios.get(`${process.env.REACT_APP_API_URL}/landing/post/`+this.state.postId, { withCredentials: true })\n          .then( postingFound => {\n            \n            console.log(\"Posting found by Id: \", postingFound.data.thePost)\n            \n            // this.setState({ creation:  }, () => {\n            //   console.log(\"State after updates:\", this.state)}\n            //   );  \n\n            // this.setState({ myArray: [...this.state.myArray, ...[1,2,3] ] })\n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n\n       \n\n    }\n\n\n    genericSync(event){\n      // console.log(\"what is: \", event.target.value)\n      const { name, value } = event.target;\n      this.setState({ [name]: value }, ()=> {console.log(\"state after changes\", this.state)});\n    }\n\n    selectChange(event){\n      console.log(\"what is: \", event.target.value)\n      let value = event.target.value;\n      this.setState({ class: value }, ()=> {console.log(\"state after class selected\", this.state)});\n    }\n\n    handleFiles(event){\n      this.setState({\n        files: event.target.files,\n       }, ()=> {console.log(\"state after files uploaded\", this.state)})\n    }\n\n    submitPostForm(event){\n\n      event.preventDefault();\n      const formData = new FormData();\n      \n      for(let i = 0, numFiles = this.state.files.length; i < numFiles; i++) {\n      let file = this.state.files[i]   \n       formData.append('file', this.state.files[i])\n       }\n    \n      formData.append('creation', this.state.creation)\n      formData.append('description', this.state.description)\n      \n      axios.post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/`+this.state.class,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        formData,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"New post created: \", responseFromServer.data.newPost)\n         \n \n          axios.get(`${process.env.REACT_APP_API_URL}/landing/post/`+responseFromServer.data.newPost._id, { withCredentials: true })\n          .then( addedPost => {\n           \n            console.log(\"Post created is: \", addedPost.data.thePost)\n            \n\n            this.setState({ postId: addedPost.data.thePost._id }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n\n            })\n          .catch(err => console.log(\"Err while searching for class: \", err))\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n    }\n\n    renderPostImages(images){\n              \n      return images.map((image,index) => {\n        return  <div key={index}><img src={image} alt=\"\" className=\"img-responsive\" /><br/></div> \n     });\n\n    }\n\n\n    showLikes(post){\n              \n        return  <div>{this.state.likes.length} likes <br/></div> \n     \n    }\n\n    addLike(postId){\n      \n      console.log(\"the post we are liking is: \", postId)\n     \n      \n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/like/`+postId,\n        this.props.currentUser,\n        // secure sending\n        {withCredentials: true}\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"post liked: \", responseFromServer.data.postLiked)\n\n         this.setState({\n          likes: update(this.state.likes, {$push: [this.state.currentUser.userId]}\n         )}, ()=> {console.log(\"update to postings: \", this.state)})\n        // this.setState({ allPostings:  }, ()=>{console.log(\"state after new post created: \", this.state)})\n\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err));\n\n\n\n    }\n\n    showComments(commentsArray){\n\n      return commentsArray.map((eachComment,index) => {\n        return  <div key={index}>\n          {/* {eachComment} */}\n          {eachComment.user.fullName}: {eachComment.comment}\n          <br/></div> \n     });\n      \n    }\n\n\n\n\n    showPost(){\n\n        return( \n\n        <div >\n          {this.state.creator}\n          <br/>\n          {this.state.class}\n          <br/>\n          {this.renderPostImages(this.state.files)}\n          <br/>\n          {this.state.description}\n          <br/>\n          <button onClick={() => this.addLike(this.state.postId)}>Like this Post</button>\n          <br/>\n\n          {this.showLikes()}\n\n          {this.showComments(this.state.comments)}\n\n          <br/>\n        </div>\n        )\n    }\n\n\n    addComment(event){\n\n      event.preventDefault();\n\n      axios.put(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_API_URL}/landing/post/`+this.state.postId,\n        this.state,\n        // secure sending\n        {withCredentials: true}\n      )\n      .then( responseFromServer => {\n        \n         console.log(\"Comment added: \", responseFromServer.data)\n\n         let fullName = this.state.currentUser.fullName;\n\n         this.setState({\n          comments: update(this.state.comments, {$push: [{user: {fullName: this.state.currentUser.fullName}, comment: this.state.comment}]}\n         )}, ()=> {console.log(\"update to comments: \", this.state)})\n            \n      })\n      .catch( err => console.log(\"Err in class update: \", err))\n\n    }\n\n\n    render(){\n\n      return (\n        \n        <div id=\"post-details\">\n\n\n          <div>\n            {this.showPost()}\n          </div>\n\n          <form onSubmit={event => this.addComment(event)} id=\"commentform\">\n\n              <input \n                type=\"text\" \n                name=\"comment\" \n                placeholder=\"Add comment...\" \n                onChange = {event => this.genericSync(event)} \n                value={this.state.comment} /> \n              <br/>\n\n              <button>Comment </button>\n\n          </form>\n\n\n\n\n       </div>\n\n\n      )\n\n\n    }\n\n\n\n\n  }\n","import React from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { Switch, Route, NavLink, Link, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport Setup from \"./components/setup/Setup\";\n// import Logout from \"./components/user-pages/Logout\"\nimport Home from \"./components/Home\";\nimport Account from \"./components/user-pages/Account\"\nimport Role from \"./components/Home\";\nimport NewSchool from \"./components/setup/NewSchool\"\nimport NewClass from \"./components/setup/NewClass\"\nimport AddClass from \"./components/setup/AddClass\"\nimport FindClass from \"./components/setup/FindClass\"\nimport Landing from \"./components/landing/Landing\"\nimport SchoolBox from './components/school/SchoolBox';\nimport ClassBox from \"./components/class/ClassBox\"\nimport ClassDetails from \"./components/class/ClassDetails\"\nimport PostDetails from \"./components/posts/PostDetails\"\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    \n    this.state = {\n      currentUser: null,\n      loggedIn: false,\n      message: null\n      // redirect: false\n    }\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n    .then( responseFromTheBackend => {\n      console.log(\"User in APP.JS: \", responseFromTheBackend)\n      const { userDoc } = responseFromTheBackend.data;\n      this.syncCurrentUser(userDoc);\n      // this.setState({ loggedIn: true }, () => {console.log(\"State after user found:\", this.state.loggedIn)})\n    })\n    .catch(err => {\n      console.log(\"Err while getting the user from the checkuser route: \", err)})\n  }\n\n\n\n  syncCurrentUser(user){\n    this.setState({ currentUser: user}, () => {console.log(\"State after user set:\", this.state)})\n    \n  }\n\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //     return <Redirect to='/' />\n  //   }\n  // }\n\n\n  handleLogout(event){\n    this.setState({ loggedIn: false }, () => {console.log(\"State after user logout:\", this.state.loggedIn)})\n    console.log(\"Handling logout\");\n    event.preventDefault();\n\n    axios.delete(`${process.env.REACT_APP_API_URL}/logout`,\n        this.state,\n        // secure sending\n        { withCredentials: true }\n    )\n    .then( responseFromServer => {\n        console.log(\"response is:\", responseFromServer.data, \"the props ----- \", this.props);\n        let userDoc = responseFromServer.data.userDoc;\n        // this.props.onUserChange(userDoc);\n        this.syncCurrentUser(userDoc);\n        alert(\"You are logged out.\")\n\n        // if (!userDoc) {\n        //   return <Redirect to='/login' />\n        // }\n        // possible  set state for redirecting:\n        // this.setState({ redirect: true }, () => {console.log(\"State after user not found:\", this.state.currentUser)})\n    })\n    .catch( err => {\n        console.log(\"err: \", err)\n        // if(err.response.data) return this.setState({ message: err.response.data.message })\n    });\n\n  \n  \n    \n  }\n\n\n\n\n  render (){   \n    // console.log(\"the state in APPJS: \", this.state);\n    // if (!this.state.currentUser) {\n    //   return <Redirect to='/'\n    //   currentUser = { this.state.currentUser }   \n    //   onUserChange = { userDoc => this.syncCurrentUser(userDoc)} />\n    // }\n\n\n    return (\n\n      <div className=\"App\">\n        <header>\n         <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <NavLink className=\"navbar-brand\" to=\"/login\" > <img className=\"img-responsive\" src=\"logo.png\" style={{width: '150px',height: '50px'}}/> \n            </NavLink>\n            {/* If no current user, signup will show. */}\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n            { !this.state.currentUser && <NavLink className=\"nav-link\" to=\"/signup\"> Signup </NavLink> }\n              </li>\n              <li className=\"nav-item\">\n            { !this.state.currentUser && <div> <NavLink to=\"/login\"> Login </NavLink> </div> }\n              </li>\n\n            {/* If current user is signed in, Nav will show: */}\n            <div>\n            { this.state.currentUser && <Link to=\"/logout\" onClick ={ event => this.handleLogout(event)}> Logout </Link> }  \n            { this.state.currentUser && <NavLink to=\"/landing\"> Landing </NavLink> }\n            \n            { this.state.currentUser && \n            //  <NavLink to=\"/account\"> Account </NavLink>\n             \n             <NavLink to={{\n                pathname: `/account`,\n                state: {\n                  currentUser: {\n                    userId: this.state.currentUser._id,\n                    fullName: this.state.currentUser.fullName,\n                    email: this.state.currentUser.email,\n                    role: this.state.currentUser.role\n                  }\n                }\n              }}> Account </NavLink>}\n\n\n                </div>\n                </ul>\n            </div>\n            </div>\n         </nav>\n        </header>\n            \n        \n        <Switch>\n        {/* this is example how we would render component normally */}\n        {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n        \n        \n         {/* <Route exact path=\"/\" render = { () => \n            <Home \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/> */}\n          <Route exact path=\"/\" component = {Home}/>\n\n\n          {/* if we have to pass some props down to a component,\n          we can't use a standard way of rendering using component={},\n          but instead we have to use render = {}  like in the example below */}\n          <Route exact path=\"/signup\" render = { () => \n            <Signup \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n\n          <Route exact path=\"/login\" render = { () => \n            <Login \n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n        \n          \n          <Route exact path=\"/account\" component = {Account}/>\n\n          {/* {<Route exact path=\"/account\" render = { () => \n            <Account\n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>} */}\n          \n          <Route exact path=\"/setup/admin\" component={ NewSchool }   /> \n          \n          <Route exact path= \"/setup/teacher\" component={ FindClass } /> \n          \n          <Route exact path= \"/setup/parent\" component={ AddClass }/> \n          \n          <Route exact path=\"/setup/class\" component={ NewClass }/>\n\n          <Route exact path=\"/setup/admin\" render = { () => \n            <NewSchool\n              currentUser = { this.state.currentUser }   \n              // onUserChange = { userDoc => this.syncCurrentUser(userDoc) }   \n            /> \n          }/>\n\n          <Route exact path=\"/school/details/:schoolId\" component = {SchoolBox} /> \n        \n          <Route exact path=\"/class/details/:classlId\" component = {ClassDetails} /> \n\n\n          <Route exact path=\"/landing\" render = { () => \n            <Landing\n              currentUser = { this.state.currentUser }   \n              onUserChange = { userDoc => this.syncCurrentUser(userDoc) }\n            /> \n            }\n          />\n          \n\n\n          <Route exact path=\"/post/details/:postId\" component = {PostDetails} />\n\n\n          \n\n        </Switch>\n        \n          \n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AdminLanding from './components/landing/AdminLanding';\nimport Posting from './components/posts/Posting'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n        {/* <Posting activeTab={1} /> */}\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}