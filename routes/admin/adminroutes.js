const express = require("express");
const router = express.Router();
const User = require("../../models/User");
const School = require("../../models/School");
const Class = require("../../models/Class");
const Posting = require("../../models/Posting");
const File = require("../../models/File");
const bcrypt = require("bcryptjs");
const passport = require("passport");
const shortid = require('shortid');
 


// const fileUploader = require("../../configs/cloudinary/cloudinaryConfig");


// CREATE NEW SCHOOL (ADMIN) - AXIOS POST =========================================================

router.post('/api/setup/school', (req, res, next) => {

  const { creator, schoolName, address, city, state, zip } = req.body;
  console.log("Frontend form data for school: ",req.body);
  
  School.create({ schoolName, address, city, state, zip, creator: creator })
  .then((newSchool)=>{
    
    res.json({school: newSchool});
    // console.log(JSON.stringify(newSchool))
  })  
  .catch((err)=>{
    console.log(err)
    res.json({Msg: "An error occurred while adding the school. Please try again."})
  })

})

// CREATE NEW CLASS (Admin/Teacher) - AXIOS POST =========================================================

router.post('/api/setup/class', (req, res, next) => {
  
  const creator = req.user._id;
  const classroomCode = shortid.generate();
  
  console.log("Code generated by shortID", shortid.generate());

  const { className, teacher, schoolName, schoolId, parents } = req.body;
  console.log("Frontend form data for school: " , req.body, creator );

  Class.create({ className, teacher, schoolName, schoolId, parents, creator })
  .then((newClass)=>{
    
    res.json({msg: 'A new class has been added.', newClass});
    console.log(JSON.stringify(newClass))
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// GET CLASS INFO =================================================================================


router.get('/api/classinfo/:id', (req, res, next) => {
  
  let classId = req.params.id

  console.log("What is the class Id from params: ", classId)
  // const {classId} = req.body; 
  // console.log("the class id in req.body is", req.body)
  // console.log("the class id is: ", classId)

  Class.findById(classId)
  .then((classFound)=>{
    
    res.json({msg: 'Class found', classFound});
  })  
  .catch((err)=>{
    console.log(err)
  })

})


// GET SCHOOL INFO =================================================================================


router.get('/api/schoolinfo/:schoolId', (req, res, next) => {
  
  let schoolId = req.params.schoolId

  console.log("What is the school Id from params: ", schoolId)
  
  School.findById(schoolId)
  .then((schoolFound)=>{
    
    res.json({msg: 'School found', schoolFound});
  })  
  .catch((err)=>{
    console.log(err)
  })

})




// FIND USERS (Admin/Teacher) - AXIOS GET =========================================================

router.get('/api/getusers', (req, res, next) => {
  
  User.find()
  .then((usersFound)=>{
    
    res.json({msg: 'Users found', usersFound});
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// UPDATE TEACHER FOR CLASS =========================================================================

router.put('/api/classinfo/:id', (req, res, next) => {
  
  let classId = req.params.id
   console.log("What is the class Id from params: ", classId)
  // console.log("What is in req.body", req.body)

  const {teacherName, teacherId} = req.body

  Class.findByIdAndUpdate(classId, {teacher: {teacherName, teacherId}})
  .then((classUpdated)=>{
    
    res.json({msg: 'Class updated', classUpdated});
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// GET SCHOOLS FOR A USER (Admin/Teacher) - AXIOS GET =========================================================

router.get('/api/getschools/:id', (req, res, next) => {
  
  let creatorId = req.params.id

  School.find({creator: creatorId})
  .then((schoolsFound)=>{
    
    res.json({msg: 'Schools created by User found', schoolsFound});
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// GET CLASSES FOR A USER (Admin/Teacher) - AXIOS GET =========================================================

router.get('/api/getclasses/:id', (req, res, next) => {
  
  let userId = req.params.id

  Class.find({$or:[{creator: userId},{teacher: {teacherId: userId}}]})
  .then((classesFound)=>{
    
    res.json({msg: 'Classes created by user or user as teacher', classesFound});
  })  
  .catch((err)=>{
    console.log(err)
  })

})


// UPDATE SCHOOL =========================================================================

router.put('/api/school/update/:id', (req, res, next) => {
  
  let schoolId = req.params.id
  // console.log("What is the school Id from params: ", classId)
  console.log("What is in req.body", req.body)

  const {schoolName, address, city, state, zip} = req.body

  School.findByIdAndUpdate(schoolId, {$set: {schoolName, address, city, state, zip}})
  .then((schoolUpdated)=>{
    
    res.json({msg: 'School updated', schoolUpdated});
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// UPDATE CLASS =========================================================================

router.put('/api/class/update/:id', (req, res, next) => {
  
  let classId = req.params.id
  // console.log("What is the school Id from params: ", classId)
  console.log("What is in req.body", req.body)

  const {className} = req.body

  Class.findByIdAndUpdate(classId, {$set: {className}})
  .then((classUpdated)=>{
    
    res.json({msg: 'Class updated', classUpdated});
  })  
  .catch((err)=>{
    console.log(err)
  })

})

// DELETE SCHOOL =========================================================================

router.post('/api/school/delete/:id', (req, res, next) => {
  
  let schoolId = req.params.id
  // console.log("What is the school Id from params: ", classId)
  console.log("What is in req.body", req.body)

  School.findByIdAndRemove(schoolId)
  .then((deletedSchool)=>{
    
    res.json({msg: 'School deleted', deletedSchool});

    // Class.find({schoolId: schoolId})
    // .then((schoolsFound)=>{
      
    //   res.json({msg: 'Classes that are part of the deleted school:', schoolsFound});

    // })  
    // .catch((err)=>{
    //   console.log(err)
    // })


  })  
  .catch((err)=>{
    console.log(err)
  })

})


// DELETE CLASSES BY SCHOOL ID =========================================================================

router.post('/api/classes/delete/:id', (req, res, next) => {
  
  let schoolId = req.params.id
  
  Class.find({schoolId: schoolId})
  .then((foundClasses)=>{
    
    res.json({msg: 'Classes found', foundClasses});

    // Class.find({schoolId: schoolId})
    // .then((schoolsFound)=>{
      
    //   res.json({msg: 'Classes that are part of the deleted school:', schoolsFound});

    // })  
    // .catch((err)=>{
    //   console.log(err)
    // })

      Class.deleteMany({schoolId: schoolId})
      .then((deletedClasses)=>{
        
        res.json({msg: 'Classes deleted', deletedClasses});

        // Class.find({schoolId: schoolId})
        // .then((schoolsFound)=>{
          
        //   res.json({msg: 'Classes that are part of the deleted school:', schoolsFound});

        // })  
        // .catch((err)=>{
        //   console.log(err)
        // })


      })  
      .catch((err)=>{
        console.log(err)
      })


  })  
  .catch((err)=>{
    console.log(err)
  })


})


// DELETE POSTS BY CLASS ID =========================================================================

router.post('/api/postings/delete/:id', (req, res, next) => {
  
  let classId = req.params.id
  
  Posting.find({class: classId})
  .then((foundPosts)=>{
    
    res.json({msg: 'Posts found', foundPosts});

    // Class.find({schoolId: schoolId})
    // .then((schoolsFound)=>{
      
    //   res.json({msg: 'Classes that are part of the deleted school:', schoolsFound});

    // })  
    // .catch((err)=>{
    //   console.log(err)
    // })

      Posting.deleteMany({class: classId})
      .then((deletedPosts)=>{
        
        res.json({msg: 'Posts deleted', deletedPosts});

        // Class.find({schoolId: schoolId})
        // .then((schoolsFound)=>{
          
        //   res.json({msg: 'Classes that are part of the deleted school:', schoolsFound});

        // })  
        // .catch((err)=>{
        //   console.log(err)
        // })


      })  
      .catch((err)=>{
        console.log(err)
      })


  })  
  .catch((err)=>{
    console.log(err)
  })


})


module.exports = router;